#include "gl/fmt/Enum.hpp"

namespace gnev::fmt {

const char* const Enum::UNKNOWN = "UNKNOWN";

Enum::Enum(GLenum value, Group group)
    : value(value)
    , group(group) {}

const char* Enum::searchMacroName() const {
    switch (group) {
        using enum Group;
    case None:
        return searchGroupNone();
    case DrawElements:
        return searchGroupDrawElements();
    case GetProgramResourceIndex:
        return searchGetProgramResourceIndex();
    default:
        return UNKNOWN;
    }
}

const char* Enum::searchGroupDrawElements() const {
    switch (value) {
    case GL_POINTS:
        return "GL_POINTS";
    case GL_LINE_STRIP:
        return "GL_LINE_STRIP";
    case GL_LINE_LOOP:
        return "GL_LINE_LOOP";
    case GL_LINES:
        return "GL_LINES";
    case GL_LINE_STRIP_ADJACENCY:
        return "GL_LINE_STRIP_ADJACENCY";
    case GL_LINES_ADJACENCY:
        return "GL_LINES_ADJACENCY";
    case GL_TRIANGLE_STRIP:
        return "GL_TRIANGLE_STRIP";
    case GL_TRIANGLE_FAN:
        return "GL_TRIANGLE_FAN";
    case GL_TRIANGLES:
        return "GL_TRIANGLES";
    case GL_TRIANGLE_STRIP_ADJACENCY:
        return "GL_TRIANGLE_STRIP_ADJACENCY";
    case GL_TRIANGLES_ADJACENCY:
        return "GL_TRIANGLES_ADJACENCY";
    case GL_PATCHES:
        return "GL_PATCHES";

    default:
        return UNKNOWN;
    }
}

const char* Enum::searchGetProgramResourceIndex() const {
    switch (value) {
    case GL_UNIFORM:
        return "GL_UNIFORM";
    case GL_UNIFORM_BLOCK:
        return "GL_UNIFORM_BLOCK";
    case GL_PROGRAM_INPUT:
        return "GL_PROGRAM_INPUT";
    case GL_PROGRAM_OUTPUT:
        return "GL_PROGRAM_OUTPUT";
    case GL_VERTEX_SUBROUTINE:
        return "GL_VERTEX_SUBROUTINE";
    case GL_TESS_CONTROL_SUBROUTINE:
        return "GL_TESS_CONTROL_SUBROUTINE";
    case GL_TESS_EVALUATION_SUBROUTINE:
        return "GL_TESS_EVALUATION_SUBROUTINE";
    case GL_GEOMETRY_SUBROUTINE:
        return "GL_GEOMETRY_SUBROUTINE";
    case GL_FRAGMENT_SUBROUTINE:
        return "GL_FRAGMENT_SUBROUTINE";
    case GL_COMPUTE_SUBROUTINE:
        return "GL_COMPUTE_SUBROUTINE";
    case GL_VERTEX_SUBROUTINE_UNIFORM:
        return "GL_VERTEX_SUBROUTINE_UNIFORM";
    case GL_TESS_CONTROL_SUBROUTINE_UNIFORM:
        return "GL_TESS_CONTROL_SUBROUTINE_UNIFORM";
    case GL_TESS_EVALUATION_SUBROUTINE_UNIFORM:
        return "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM";
    case GL_GEOMETRY_SUBROUTINE_UNIFORM:
        return "GL_GEOMETRY_SUBROUTINE_UNIFORM";
    case GL_FRAGMENT_SUBROUTINE_UNIFORM:
        return "GL_FRAGMENT_SUBROUTINE_UNIFORM";
    case GL_COMPUTE_SUBROUTINE_UNIFORM:
        return "GL_COMPUTE_SUBROUTINE_UNIFORM";
    case GL_TRANSFORM_FEEDBACK_VARYING:
        return "GL_TRANSFORM_FEEDBACK_VARYING";
    case GL_TRANSFORM_FEEDBACK_BUFFER:
        return "GL_TRANSFORM_FEEDBACK_BUFFER";
    case GL_BUFFER_VARIABLE:
        return "GL_BUFFER_VARIABLE";
    case GL_SHADER_STORAGE_BLOCK:
        return "GL_SHADER_STORAGE_BLOCK";

    default:
        return UNKNOWN;
    }
}

const char* Enum::searchGroupNone() const {
    switch (this->value) {
    case 0x0600:
        return "GL_2D";
    case 0x1407:
        return "GL_2_BYTES";
    case 0x0601:
        return "GL_3D";
    case 0x0602:
        return "GL_3D_COLOR";
    case 0x0603:
        return "GL_3D_COLOR_TEXTURE";
    case 0x1408:
        return "GL_3_BYTES";
    case 0x0604:
        return "GL_4D_COLOR_TEXTURE";
    case 0x1409:
        return "GL_4_BYTES";
    case 0x0100:
        return "GL_ACCUM/GL_DEPTH_BUFFER_BIT/GL_DYNAMIC_STORAGE_BIT";
    case 0x0D5B:
        return "GL_ACCUM_ALPHA_BITS";
    case 0x0D5A:
        return "GL_ACCUM_BLUE_BITS";
    case 0x00000200:
        return "GL_ACCUM_BUFFER_BIT/GL_BUFFER_UPDATE_BARRIER_BIT/GL_NEVER/"
               "GL_CLIENT_STORAGE_BIT";
    case 0x0B80:
        return "GL_ACCUM_CLEAR_VALUE";
    case 0x0D59:
        return "GL_ACCUM_GREEN_BITS";
    case 0x0D58:
        return "GL_ACCUM_RED_BITS";
    case 0x92D9:
        return "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS";
    case 0x8B89:
        return "GL_ACTIVE_ATTRIBUTES";
    case 0x8B8A:
        return "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH";
    case 0x8259:
        return "GL_ACTIVE_PROGRAM";
    case 0x92F5:
        return "GL_ACTIVE_RESOURCES";
    case 0x8DE5:
        return "GL_ACTIVE_SUBROUTINES";
    case 0x8E48:
        return "GL_ACTIVE_SUBROUTINE_MAX_LENGTH";
    case 0x8DE6:
        return "GL_ACTIVE_SUBROUTINE_UNIFORMS";
    case 0x8E47:
        return "GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS";
    case 0x8E49:
        return "GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH";
    case 0x84E0:
        return "GL_ACTIVE_TEXTURE";
    case 0x8B86:
        return "GL_ACTIVE_UNIFORMS";
    case 0x8A36:
        return "GL_ACTIVE_UNIFORM_BLOCKS";
    case 0x8A35:
        return "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH";
    case 0x8B87:
        return "GL_ACTIVE_UNIFORM_MAX_LENGTH";
    case 0x9305:
        return "GL_ACTIVE_VARIABLES";
    case 0x0104:
        return "GL_ADD";
    case 0x8574:
        return "GL_ADD_SIGNED";
    case 0x846E:
        return "GL_ALIASED_LINE_WIDTH_RANGE";
    case 0x846D:
        return "GL_ALIASED_POINT_SIZE_RANGE";
    case 0xFFFFFFFF:
        return "GL_INVALID_INDEX/GL_ALL_ATTRIB_BITS/GL_ALL_BARRIER_BITS/"
               "GL_ALL_SHADER_BITS/GL_CLIENT_ALL_ATTRIB_BITS";
    case 0x1906:
        return "GL_ALPHA";
    case 0x803D:
        return "GL_ALPHA12";
    case 0x803E:
        return "GL_ALPHA16";
    case 0x803B:
        return "GL_ALPHA4";
    case 0x803C:
        return "GL_ALPHA8";
    case 0x0D1D:
        return "GL_ALPHA_BIAS";
    case 0x0D55:
        return "GL_ALPHA_BITS";
    case 0x8D97:
        return "GL_ALPHA_INTEGER";
    case 0x0D1C:
        return "GL_ALPHA_SCALE";
    case 0x0BC0:
        return "GL_ALPHA_TEST";
    case 0x0BC1:
        return "GL_ALPHA_TEST_FUNC";
    case 0x0BC2:
        return "GL_ALPHA_TEST_REF";
    case 0x911A:
        return "GL_ALREADY_SIGNALED";
    case 0x0207:
        return "GL_ALWAYS";
    case 0x1200:
        return "GL_AMBIENT";
    case 0x1602:
        return "GL_AMBIENT_AND_DIFFUSE";
    case 0x1501:
        return "GL_AND";
    case 0x1504:
        return "GL_AND_INVERTED";
    case 0x1502:
        return "GL_AND_REVERSE";
    case 0x8C2F:
        return "GL_ANY_SAMPLES_PASSED";
    case 0x8D6A:
        return "GL_ANY_SAMPLES_PASSED_CONSERVATIVE";
    case 0x8892:
        return "GL_ARRAY_BUFFER";
    case 0x8894:
        return "GL_ARRAY_BUFFER_BINDING";
    case 0x92FB:
        return "GL_ARRAY_SIZE";
    case 0x92FE:
        return "GL_ARRAY_STRIDE";
    case 0x00001000:
        return "GL_ATOMIC_COUNTER_BARRIER_BIT";
    case 0x92C0:
        return "GL_ATOMIC_COUNTER_BUFFER";
    case 0x92C5:
        return "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS";
    case 0x92C6:
        return "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES";
    case 0x92C1:
        return "GL_ATOMIC_COUNTER_BUFFER_BINDING";
    case 0x92C4:
        return "GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE";
    case 0x9301:
        return "GL_ATOMIC_COUNTER_BUFFER_INDEX";
    case 0x90ED:
        return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER";
    case 0x92CB:
        return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER";
    case 0x92CA:
        return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER";
    case 0x92C8:
        return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER";
    case 0x92C9:
        return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER";
    case 0x92C7:
        return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER";
    case 0x92C3:
        return "GL_ATOMIC_COUNTER_BUFFER_SIZE";
    case 0x92C2:
        return "GL_ATOMIC_COUNTER_BUFFER_START";
    case 0x8B85:
        return "GL_ATTACHED_SHADERS";
    case 0x0BB0:
        return "GL_ATTRIB_STACK_DEPTH";
    case 0x8295:
        return "GL_AUTO_GENERATE_MIPMAP";
    case 0x0D80:
        return "GL_AUTO_NORMAL";
    case 0x0409:
        return "GL_AUX0";
    case 0x040A:
        return "GL_AUX1";
    case 0x040B:
        return "GL_AUX2";
    case 0x040C:
        return "GL_AUX3";
    case 0x0C00:
        return "GL_AUX_BUFFERS";
    case 0x0405:
        return "GL_BACK";
    case 0x0402:
        return "GL_BACK_LEFT";
    case 0x0403:
        return "GL_BACK_RIGHT";
    case 0x80E0:
        return "GL_BGR";
    case 0x80E1:
        return "GL_BGRA";
    case 0x8D9B:
        return "GL_BGRA_INTEGER";
    case 0x8D9A:
        return "GL_BGR_INTEGER";
    case 0x1A00:
        return "GL_BITMAP";
    case 0x0704:
        return "GL_BITMAP_TOKEN";
    case 0x0BE2:
        return "GL_BLEND";
    case 0x8005:
        return "GL_BLEND_COLOR";
    case 0x0BE0:
        return "GL_BLEND_DST";
    case 0x80CA:
        return "GL_BLEND_DST_ALPHA";
    case 0x80C8:
        return "GL_BLEND_DST_RGB";
    case 0x8009:
        return "GL_BLEND_EQUATION/GL_BLEND_EQUATION_RGB";
    case 0x883D:
        return "GL_BLEND_EQUATION_ALPHA";
    case 0x0BE1:
        return "GL_BLEND_SRC";
    case 0x80CB:
        return "GL_BLEND_SRC_ALPHA";
    case 0x80C9:
        return "GL_BLEND_SRC_RGB";
    case 0x92FD:
        return "GL_BLOCK_INDEX";
    case 0x1905:
        return "GL_BLUE";
    case 0x0D1B:
        return "GL_BLUE_BIAS";
    case 0x0D54:
        return "GL_BLUE_BITS";
    case 0x8D96:
        return "GL_BLUE_INTEGER";
    case 0x0D1A:
        return "GL_BLUE_SCALE";
    case 0x8B56:
        return "GL_BOOL";
    case 0x8B57:
        return "GL_BOOL_VEC2";
    case 0x8B58:
        return "GL_BOOL_VEC3";
    case 0x8B59:
        return "GL_BOOL_VEC4";
    case 0x82E0:
        return "GL_BUFFER";
    case 0x88BB:
        return "GL_BUFFER_ACCESS";
    case 0x911F:
        return "GL_BUFFER_ACCESS_FLAGS";
    case 0x9302:
        return "GL_BUFFER_BINDING";
    case 0x9303:
        return "GL_BUFFER_DATA_SIZE";
    case 0x821F:
        return "GL_BUFFER_IMMUTABLE_STORAGE";
    case 0x88BC:
        return "GL_BUFFER_MAPPED";
    case 0x9120:
        return "GL_BUFFER_MAP_LENGTH";
    case 0x9121:
        return "GL_BUFFER_MAP_OFFSET";
    case 0x88BD:
        return "GL_BUFFER_MAP_POINTER";
    case 0x8764:
        return "GL_BUFFER_SIZE";
    case 0x8220:
        return "GL_BUFFER_STORAGE_FLAGS";
    case 0x8765:
        return "GL_BUFFER_USAGE";
    case 0x92E5:
        return "GL_BUFFER_VARIABLE";
    case 0x1400:
        return "GL_BYTE";
    case 0x2A24:
        return "GL_C3F_V3F";
    case 0x2A26:
        return "GL_C4F_N3F_V3F";
    case 0x2A22:
        return "GL_C4UB_V2F";
    case 0x2A23:
        return "GL_C4UB_V3F";
    case 0x82B8:
        return "GL_CAVEAT_SUPPORT";
    case 0x0901:
        return "GL_CCW";
    case 0x2900:
        return "GL_CLAMP";
    case 0x891B:
        return "GL_CLAMP_FRAGMENT_COLOR";
    case 0x891C:
        return "GL_CLAMP_READ_COLOR";
    case 0x812D:
        return "GL_CLAMP_TO_BORDER";
    case 0x812F:
        return "GL_CLAMP_TO_EDGE";
    case 0x891A:
        return "GL_CLAMP_VERTEX_COLOR";
    case 0x1500:
        return "GL_CLEAR";
    case 0x82B4:
        return "GL_CLEAR_BUFFER";
    case 0x9365:
        return "GL_CLEAR_TEXTURE";
    case 0x84E1:
        return "GL_CLIENT_ACTIVE_TEXTURE";
    case 0x0BB1:
        return "GL_CLIENT_ATTRIB_STACK_DEPTH";
    case 0x00004000:
        return "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT/GL_COLOR_BUFFER_BIT/GL_LIGHT0";
    case 0x00000001:
        return "GL_CLIENT_PIXEL_STORE_BIT/GL_CONTEXT_CORE_PROFILE_BIT/"
               "GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT/GL_CURRENT_BIT/"
               "GL_SYNC_FLUSH_COMMANDS_BIT/GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT/"
               "GL_VERTEX_SHADER_BIT";
    case 0x00000002:
        return "GL_CLIENT_VERTEX_ARRAY_BIT/GL_CONTEXT_COMPATIBILITY_PROFILE_BIT/"
               "GL_CONTEXT_FLAG_DEBUG_BIT/GL_ELEMENT_ARRAY_BARRIER_BIT/"
               "GL_FRAGMENT_SHADER_BIT";
    case 0x82F6:
        return "GL_CLIPPING_INPUT_PRIMITIVES";
    case 0x82F7:
        return "GL_CLIPPING_OUTPUT_PRIMITIVES";
    case 0x935D:
        return "GL_CLIP_DEPTH_MODE";
    case 0x3000:
        return "GL_CLIP_DISTANCE0/GL_CLIP_PLANE0";
    case 0x3001:
        return "GL_CLIP_DISTANCE1/GL_CLIP_PLANE1";
    case 0x3002:
        return "GL_CLIP_DISTANCE2/GL_CLIP_PLANE2";
    case 0x3003:
        return "GL_CLIP_DISTANCE3/GL_CLIP_PLANE3";
    case 0x3004:
        return "GL_CLIP_DISTANCE4/GL_CLIP_PLANE4";
    case 0x3005:
        return "GL_CLIP_DISTANCE5/GL_CLIP_PLANE5";
    case 0x3006:
        return "GL_CLIP_DISTANCE6";
    case 0x3007:
        return "GL_CLIP_DISTANCE7";
    case 0x935C:
        return "GL_CLIP_ORIGIN";
    case 0x0A00:
        return "GL_COEFF";
    case 0x1800:
        return "GL_COLOR";
    case 0x8076:
        return "GL_COLOR_ARRAY";
    case 0x8898:
        return "GL_COLOR_ARRAY_BUFFER_BINDING";
    case 0x8090:
        return "GL_COLOR_ARRAY_POINTER";
    case 0x8081:
        return "GL_COLOR_ARRAY_SIZE";
    case 0x8083:
        return "GL_COLOR_ARRAY_STRIDE";
    case 0x8082:
        return "GL_COLOR_ARRAY_TYPE";
    case 0x8CE0:
        return "GL_COLOR_ATTACHMENT0";
    case 0x8CE1:
        return "GL_COLOR_ATTACHMENT1";
    case 0x8CEA:
        return "GL_COLOR_ATTACHMENT10";
    case 0x8CEB:
        return "GL_COLOR_ATTACHMENT11";
    case 0x8CEC:
        return "GL_COLOR_ATTACHMENT12";
    case 0x8CED:
        return "GL_COLOR_ATTACHMENT13";
    case 0x8CEE:
        return "GL_COLOR_ATTACHMENT14";
    case 0x8CEF:
        return "GL_COLOR_ATTACHMENT15";
    case 0x8CF0:
        return "GL_COLOR_ATTACHMENT16";
    case 0x8CF1:
        return "GL_COLOR_ATTACHMENT17";
    case 0x8CF2:
        return "GL_COLOR_ATTACHMENT18";
    case 0x8CF3:
        return "GL_COLOR_ATTACHMENT19";
    case 0x8CE2:
        return "GL_COLOR_ATTACHMENT2";
    case 0x8CF4:
        return "GL_COLOR_ATTACHMENT20";
    case 0x8CF5:
        return "GL_COLOR_ATTACHMENT21";
    case 0x8CF6:
        return "GL_COLOR_ATTACHMENT22";
    case 0x8CF7:
        return "GL_COLOR_ATTACHMENT23";
    case 0x8CF8:
        return "GL_COLOR_ATTACHMENT24";
    case 0x8CF9:
        return "GL_COLOR_ATTACHMENT25";
    case 0x8CFA:
        return "GL_COLOR_ATTACHMENT26";
    case 0x8CFB:
        return "GL_COLOR_ATTACHMENT27";
    case 0x8CFC:
        return "GL_COLOR_ATTACHMENT28";
    case 0x8CFD:
        return "GL_COLOR_ATTACHMENT29";
    case 0x8CE3:
        return "GL_COLOR_ATTACHMENT3";
    case 0x8CFE:
        return "GL_COLOR_ATTACHMENT30";
    case 0x8CFF:
        return "GL_COLOR_ATTACHMENT31";
    case 0x8CE4:
        return "GL_COLOR_ATTACHMENT4";
    case 0x8CE5:
        return "GL_COLOR_ATTACHMENT5";
    case 0x8CE6:
        return "GL_COLOR_ATTACHMENT6";
    case 0x8CE7:
        return "GL_COLOR_ATTACHMENT7";
    case 0x8CE8:
        return "GL_COLOR_ATTACHMENT8";
    case 0x8CE9:
        return "GL_COLOR_ATTACHMENT9";
    case 0x0C22:
        return "GL_COLOR_CLEAR_VALUE";
    case 0x8283:
        return "GL_COLOR_COMPONENTS";
    case 0x8296:
        return "GL_COLOR_ENCODING";
    case 0x1900:
        return "GL_COLOR_INDEX";
    case 0x1603:
        return "GL_COLOR_INDEXES";
    case 0x0BF2:
        return "GL_COLOR_LOGIC_OP";
    case 0x0B57:
        return "GL_COLOR_MATERIAL";
    case 0x0B55:
        return "GL_COLOR_MATERIAL_FACE";
    case 0x0B56:
        return "GL_COLOR_MATERIAL_PARAMETER";
    case 0x8286:
        return "GL_COLOR_RENDERABLE";
    case 0x8458:
        return "GL_COLOR_SUM";
    case 0x80D0:
        return "GL_COLOR_TABLE";
    case 0x0C23:
        return "GL_COLOR_WRITEMASK";
    case 0x8570:
        return "GL_COMBINE";
    case 0x8572:
        return "GL_COMBINE_ALPHA";
    case 0x8571:
        return "GL_COMBINE_RGB";
    case 0x00000040:
        return "GL_COMMAND_BARRIER_BIT";
    case 0x884E:
        return "GL_COMPARE_REF_TO_TEXTURE/GL_COMPARE_R_TO_TEXTURE";
    case 0x8E4B:
        return "GL_COMPATIBLE_SUBROUTINES";
    case 0x1300:
        return "GL_COMPILE";
    case 0x1301:
        return "GL_COMPILE_AND_EXECUTE";
    case 0x8B81:
        return "GL_COMPILE_STATUS";
    case 0x84E9:
        return "GL_COMPRESSED_ALPHA";
    case 0x84EC:
        return "GL_COMPRESSED_INTENSITY";
    case 0x84EA:
        return "GL_COMPRESSED_LUMINANCE";
    case 0x84EB:
        return "GL_COMPRESSED_LUMINANCE_ALPHA";
    case 0x9270:
        return "GL_COMPRESSED_R11_EAC";
    case 0x8225:
        return "GL_COMPRESSED_RED";
    case 0x8DBB:
        return "GL_COMPRESSED_RED_RGTC1";
    case 0x8226:
        return "GL_COMPRESSED_RG";
    case 0x9272:
        return "GL_COMPRESSED_RG11_EAC";
    case 0x84ED:
        return "GL_COMPRESSED_RGB";
    case 0x9274:
        return "GL_COMPRESSED_RGB8_ETC2";
    case 0x9276:
        return "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2";
    case 0x84EE:
        return "GL_COMPRESSED_RGBA";
    case 0x9278:
        return "GL_COMPRESSED_RGBA8_ETC2_EAC";
    case 0x8E8C:
        return "GL_COMPRESSED_RGBA_BPTC_UNORM";
    case 0x8E8E:
        return "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT";
    case 0x8E8F:
        return "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT";
    case 0x8DBD:
        return "GL_COMPRESSED_RG_RGTC2";
    case 0x9271:
        return "GL_COMPRESSED_SIGNED_R11_EAC";
    case 0x8DBC:
        return "GL_COMPRESSED_SIGNED_RED_RGTC1";
    case 0x9273:
        return "GL_COMPRESSED_SIGNED_RG11_EAC";
    case 0x8DBE:
        return "GL_COMPRESSED_SIGNED_RG_RGTC2";
    case 0x8C4A:
        return "GL_COMPRESSED_SLUMINANCE";
    case 0x8C4B:
        return "GL_COMPRESSED_SLUMINANCE_ALPHA";
    case 0x8C48:
        return "GL_COMPRESSED_SRGB";
    case 0x9279:
        return "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC";
    case 0x9275:
        return "GL_COMPRESSED_SRGB8_ETC2";
    case 0x9277:
        return "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2";
    case 0x8C49:
        return "GL_COMPRESSED_SRGB_ALPHA";
    case 0x8E8D:
        return "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM";
    case 0x86A3:
        return "GL_COMPRESSED_TEXTURE_FORMATS";
    case 0x91B9:
        return "GL_COMPUTE_SHADER";
    case 0x00000020:
        return "GL_COMPUTE_SHADER_BIT";
    case 0x82F5:
        return "GL_COMPUTE_SHADER_INVOCATIONS";
    case 0x92ED:
        return "GL_COMPUTE_SUBROUTINE";
    case 0x92F3:
        return "GL_COMPUTE_SUBROUTINE_UNIFORM";
    case 0x82A0:
        return "GL_COMPUTE_TEXTURE";
    case 0x8267:
        return "GL_COMPUTE_WORK_GROUP_SIZE";
    case 0x911C:
        return "GL_CONDITION_SATISFIED";
    case 0x8576:
        return "GL_CONSTANT";
    case 0x8003:
        return "GL_CONSTANT_ALPHA";
    case 0x1207:
        return "GL_CONSTANT_ATTENUATION";
    case 0x8001:
        return "GL_CONSTANT_COLOR";
    case 0x821E:
        return "GL_CONTEXT_FLAGS";
    case 0x00000008:
        return "GL_CONTEXT_FLAG_NO_ERROR_BIT";
    case 0x00000004:
        return "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT/GL_GEOMETRY_SHADER_BIT/GL_LINE_BIT/"
               "GL_UNIFORM_BARRIER_BIT";
    case 0x0507:
        return "GL_CONTEXT_LOST";
    case 0x9126:
        return "GL_CONTEXT_PROFILE_MASK";
    case 0x82FB:
        return "GL_CONTEXT_RELEASE_BEHAVIOR";
    case 0x82FC:
        return "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH";
    case 0x8010:
        return "GL_CONVOLUTION_1D";
    case 0x8011:
        return "GL_CONVOLUTION_2D";
    case 0x8862:
        return "GL_COORD_REPLACE";
    case 0x1503:
        return "GL_COPY";
    case 0x150C:
        return "GL_COPY_INVERTED";
    case 0x0706:
        return "GL_COPY_PIXEL_TOKEN";
    case 0x8F36:
        return "GL_COPY_READ_BUFFER/GL_COPY_READ_BUFFER_BINDING";
    case 0x8F37:
        return "GL_COPY_WRITE_BUFFER/GL_COPY_WRITE_BUFFER_BINDING";
    case 0x0B44:
        return "GL_CULL_FACE";
    case 0x0B45:
        return "GL_CULL_FACE_MODE";
    case 0x0B00:
        return "GL_CURRENT_COLOR";
    case 0x8453:
        return "GL_CURRENT_FOG_COORD/GL_CURRENT_FOG_COORDINATE";
    case 0x0B01:
        return "GL_CURRENT_INDEX";
    case 0x0B02:
        return "GL_CURRENT_NORMAL";
    case 0x8B8D:
        return "GL_CURRENT_PROGRAM";
    case 0x8865:
        return "GL_CURRENT_QUERY";
    case 0x0B04:
        return "GL_CURRENT_RASTER_COLOR";
    case 0x0B09:
        return "GL_CURRENT_RASTER_DISTANCE";
    case 0x0B05:
        return "GL_CURRENT_RASTER_INDEX";
    case 0x0B07:
        return "GL_CURRENT_RASTER_POSITION";
    case 0x0B08:
        return "GL_CURRENT_RASTER_POSITION_VALID";
    case 0x845F:
        return "GL_CURRENT_RASTER_SECONDARY_COLOR";
    case 0x0B06:
        return "GL_CURRENT_RASTER_TEXTURE_COORDS";
    case 0x8459:
        return "GL_CURRENT_SECONDARY_COLOR";
    case 0x0B03:
        return "GL_CURRENT_TEXTURE_COORDS";
    case 0x8626:
        return "GL_CURRENT_VERTEX_ATTRIB";
    case 0x0900:
        return "GL_CW";
    case 0x8244:
        return "GL_DEBUG_CALLBACK_FUNCTION";
    case 0x8245:
        return "GL_DEBUG_CALLBACK_USER_PARAM";
    case 0x826D:
        return "GL_DEBUG_GROUP_STACK_DEPTH";
    case 0x9145:
        return "GL_DEBUG_LOGGED_MESSAGES";
    case 0x8243:
        return "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH";
    case 0x92E0:
        return "GL_DEBUG_OUTPUT";
    case 0x8242:
        return "GL_DEBUG_OUTPUT_SYNCHRONOUS";
    case 0x9146:
        return "GL_DEBUG_SEVERITY_HIGH";
    case 0x9148:
        return "GL_DEBUG_SEVERITY_LOW";
    case 0x9147:
        return "GL_DEBUG_SEVERITY_MEDIUM";
    case 0x826B:
        return "GL_DEBUG_SEVERITY_NOTIFICATION";
    case 0x8246:
        return "GL_DEBUG_SOURCE_API";
    case 0x824A:
        return "GL_DEBUG_SOURCE_APPLICATION";
    case 0x824B:
        return "GL_DEBUG_SOURCE_OTHER";
    case 0x8248:
        return "GL_DEBUG_SOURCE_SHADER_COMPILER";
    case 0x8249:
        return "GL_DEBUG_SOURCE_THIRD_PARTY";
    case 0x8247:
        return "GL_DEBUG_SOURCE_WINDOW_SYSTEM";
    case 0x824D:
        return "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR";
    case 0x824C:
        return "GL_DEBUG_TYPE_ERROR";
    case 0x8268:
        return "GL_DEBUG_TYPE_MARKER";
    case 0x8251:
        return "GL_DEBUG_TYPE_OTHER";
    case 0x8250:
        return "GL_DEBUG_TYPE_PERFORMANCE";
    case 0x826A:
        return "GL_DEBUG_TYPE_POP_GROUP";
    case 0x824F:
        return "GL_DEBUG_TYPE_PORTABILITY";
    case 0x8269:
        return "GL_DEBUG_TYPE_PUSH_GROUP";
    case 0x824E:
        return "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR";
    case 0x2101:
        return "GL_DECAL";
    case 0x1E03:
        return "GL_DECR";
    case 0x8508:
        return "GL_DECR_WRAP";
    case 0x8B80:
        return "GL_DELETE_STATUS";
    case 0x1801:
        return "GL_DEPTH";
    case 0x88F0:
        return "GL_DEPTH24_STENCIL8";
    case 0x8CAD:
        return "GL_DEPTH32F_STENCIL8";
    case 0x8D00:
        return "GL_DEPTH_ATTACHMENT";
    case 0x0D1F:
        return "GL_DEPTH_BIAS";
    case 0x0D56:
        return "GL_DEPTH_BITS";
    case 0x864F:
        return "GL_DEPTH_CLAMP";
    case 0x0B73:
        return "GL_DEPTH_CLEAR_VALUE";
    case 0x1902:
        return "GL_DEPTH_COMPONENT";
    case 0x81A5:
        return "GL_DEPTH_COMPONENT16";
    case 0x81A6:
        return "GL_DEPTH_COMPONENT24";
    case 0x81A7:
        return "GL_DEPTH_COMPONENT32";
    case 0x8CAC:
        return "GL_DEPTH_COMPONENT32F";
    case 0x8284:
        return "GL_DEPTH_COMPONENTS";
    case 0x0B74:
        return "GL_DEPTH_FUNC";
    case 0x0B70:
        return "GL_DEPTH_RANGE";
    case 0x8287:
        return "GL_DEPTH_RENDERABLE";
    case 0x0D1E:
        return "GL_DEPTH_SCALE";
    case 0x84F9:
        return "GL_DEPTH_STENCIL";
    case 0x821A:
        return "GL_DEPTH_STENCIL_ATTACHMENT";
    case 0x90EA:
        return "GL_DEPTH_STENCIL_TEXTURE_MODE";
    case 0x0B71:
        return "GL_DEPTH_TEST";
    case 0x884B:
        return "GL_DEPTH_TEXTURE_MODE";
    case 0x0B72:
        return "GL_DEPTH_WRITEMASK";
    case 0x1201:
        return "GL_DIFFUSE";
    case 0x90EE:
        return "GL_DISPATCH_INDIRECT_BUFFER";
    case 0x90EF:
        return "GL_DISPATCH_INDIRECT_BUFFER_BINDING";
    case 0x82E7:
        return "GL_DISPLAY_LIST";
    case 0x0BD0:
        return "GL_DITHER";
    case 0x0A02:
        return "GL_DOMAIN";
    case 0x1100:
        return "GL_DONT_CARE";
    case 0x86AE:
        return "GL_DOT3_RGB";
    case 0x86AF:
        return "GL_DOT3_RGBA";
    case 0x140A:
        return "GL_DOUBLE";
    case 0x0C32:
        return "GL_DOUBLEBUFFER";
    case 0x8F46:
        return "GL_DOUBLE_MAT2";
    case 0x8F49:
        return "GL_DOUBLE_MAT2x3";
    case 0x8F4A:
        return "GL_DOUBLE_MAT2x4";
    case 0x8F47:
        return "GL_DOUBLE_MAT3";
    case 0x8F4B:
        return "GL_DOUBLE_MAT3x2";
    case 0x8F4C:
        return "GL_DOUBLE_MAT3x4";
    case 0x8F48:
        return "GL_DOUBLE_MAT4";
    case 0x8F4D:
        return "GL_DOUBLE_MAT4x2";
    case 0x8F4E:
        return "GL_DOUBLE_MAT4x3";
    case 0x8FFC:
        return "GL_DOUBLE_VEC2";
    case 0x8FFD:
        return "GL_DOUBLE_VEC3";
    case 0x8FFE:
        return "GL_DOUBLE_VEC4";
    case 0x0C01:
        return "GL_DRAW_BUFFER";
    case 0x8825:
        return "GL_DRAW_BUFFER0";
    case 0x8826:
        return "GL_DRAW_BUFFER1";
    case 0x882F:
        return "GL_DRAW_BUFFER10";
    case 0x8830:
        return "GL_DRAW_BUFFER11";
    case 0x8831:
        return "GL_DRAW_BUFFER12";
    case 0x8832:
        return "GL_DRAW_BUFFER13";
    case 0x8833:
        return "GL_DRAW_BUFFER14";
    case 0x8834:
        return "GL_DRAW_BUFFER15";
    case 0x8827:
        return "GL_DRAW_BUFFER2";
    case 0x8828:
        return "GL_DRAW_BUFFER3";
    case 0x8829:
        return "GL_DRAW_BUFFER4";
    case 0x882A:
        return "GL_DRAW_BUFFER5";
    case 0x882B:
        return "GL_DRAW_BUFFER6";
    case 0x882C:
        return "GL_DRAW_BUFFER7";
    case 0x882D:
        return "GL_DRAW_BUFFER8";
    case 0x882E:
        return "GL_DRAW_BUFFER9";
    case 0x8CA9:
        return "GL_DRAW_FRAMEBUFFER";
    case 0x8CA6:
        return "GL_DRAW_FRAMEBUFFER_BINDING/GL_FRAMEBUFFER_BINDING";
    case 0x8F3F:
        return "GL_DRAW_INDIRECT_BUFFER";
    case 0x8F43:
        return "GL_DRAW_INDIRECT_BUFFER_BINDING";
    case 0x0705:
        return "GL_DRAW_PIXEL_TOKEN";
    case 0x0304:
        return "GL_DST_ALPHA";
    case 0x0306:
        return "GL_DST_COLOR";
    case 0x88EA:
        return "GL_DYNAMIC_COPY";
    case 0x88E8:
        return "GL_DYNAMIC_DRAW";
    case 0x88E9:
        return "GL_DYNAMIC_READ";
    case 0x0B43:
        return "GL_EDGE_FLAG";
    case 0x8079:
        return "GL_EDGE_FLAG_ARRAY";
    case 0x889B:
        return "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING";
    case 0x8093:
        return "GL_EDGE_FLAG_ARRAY_POINTER";
    case 0x808C:
        return "GL_EDGE_FLAG_ARRAY_STRIDE";
    case 0x8893:
        return "GL_ELEMENT_ARRAY_BUFFER";
    case 0x8895:
        return "GL_ELEMENT_ARRAY_BUFFER_BINDING";
    case 0x1600:
        return "GL_EMISSION";
    case 0x00002000:
        return "GL_ENABLE_BIT";
    case 0x0202:
        return "GL_EQUAL";
    case 0x1509:
        return "GL_EQUIV";
    case 0x00010000:
        return "GL_EVAL_BIT";
    case 0x0800:
        return "GL_EXP";
    case 0x0801:
        return "GL_EXP2";
    case 0x1F03:
        return "GL_EXTENSIONS";
    case 0x2400:
        return "GL_EYE_LINEAR";
    case 0x2502:
        return "GL_EYE_PLANE";
    case 0:
        return "GL_FALSE";
    case 0x1101:
        return "GL_FASTEST";
    case 0x1C01:
        return "GL_FEEDBACK";
    case 0x0DF0:
        return "GL_FEEDBACK_BUFFER_POINTER";
    case 0x0DF1:
        return "GL_FEEDBACK_BUFFER_SIZE";
    case 0x0DF2:
        return "GL_FEEDBACK_BUFFER_TYPE";
    case 0x1B02:
        return "GL_FILL";
    case 0x829A:
        return "GL_FILTER";
    case 0x8E4D:
        return "GL_FIRST_VERTEX_CONVENTION";
    case 0x140C:
        return "GL_FIXED";
    case 0x891D:
        return "GL_FIXED_ONLY";
    case 0x1D00:
        return "GL_FLAT";
    case 0x1406:
        return "GL_FLOAT";
    case 0x8DAD:
        return "GL_FLOAT_32_UNSIGNED_INT_24_8_REV";
    case 0x8B5A:
        return "GL_FLOAT_MAT2";
    case 0x8B65:
        return "GL_FLOAT_MAT2x3";
    case 0x8B66:
        return "GL_FLOAT_MAT2x4";
    case 0x8B5B:
        return "GL_FLOAT_MAT3";
    case 0x8B67:
        return "GL_FLOAT_MAT3x2";
    case 0x8B68:
        return "GL_FLOAT_MAT3x4";
    case 0x8B5C:
        return "GL_FLOAT_MAT4";
    case 0x8B69:
        return "GL_FLOAT_MAT4x2";
    case 0x8B6A:
        return "GL_FLOAT_MAT4x3";
    case 0x8B50:
        return "GL_FLOAT_VEC2";
    case 0x8B51:
        return "GL_FLOAT_VEC3";
    case 0x8B52:
        return "GL_FLOAT_VEC4";
    case 0x0B60:
        return "GL_FOG";
    case 0x00000080:
        return "GL_FOG_BIT";
    case 0x0B66:
        return "GL_FOG_COLOR";
    case 0x8451:
        return "GL_FOG_COORD/GL_FOG_COORDINATE";
    case 0x8457:
        return "GL_FOG_COORDINATE_ARRAY/GL_FOG_COORD_ARRAY";
    case 0x889D:
        return "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING/GL_FOG_COORD_ARRAY_BUFFER_BINDING";
    case 0x8456:
        return "GL_FOG_COORDINATE_ARRAY_POINTER/GL_FOG_COORD_ARRAY_POINTER";
    case 0x8455:
        return "GL_FOG_COORDINATE_ARRAY_STRIDE/GL_FOG_COORD_ARRAY_STRIDE";
    case 0x8454:
        return "GL_FOG_COORDINATE_ARRAY_TYPE/GL_FOG_COORD_ARRAY_TYPE";
    case 0x8450:
        return "GL_FOG_COORDINATE_SOURCE/GL_FOG_COORD_SRC";
    case 0x0B62:
        return "GL_FOG_DENSITY";
    case 0x0B64:
        return "GL_FOG_END";
    case 0x0C54:
        return "GL_FOG_HINT";
    case 0x0B61:
        return "GL_FOG_INDEX";
    case 0x0B65:
        return "GL_FOG_MODE";
    case 0x0B63:
        return "GL_FOG_START";
    case 0x8E7C:
        return "GL_FRACTIONAL_EVEN";
    case 0x8E7B:
        return "GL_FRACTIONAL_ODD";
    case 0x8452:
        return "GL_FRAGMENT_DEPTH";
    case 0x8E5D:
        return "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS";
    case 0x8B30:
        return "GL_FRAGMENT_SHADER";
    case 0x8B8B:
        return "GL_FRAGMENT_SHADER_DERIVATIVE_HINT";
    case 0x82F4:
        return "GL_FRAGMENT_SHADER_INVOCATIONS";
    case 0x92EC:
        return "GL_FRAGMENT_SUBROUTINE";
    case 0x92F2:
        return "GL_FRAGMENT_SUBROUTINE_UNIFORM";
    case 0x829F:
        return "GL_FRAGMENT_TEXTURE";
    case 0x8D40:
        return "GL_FRAMEBUFFER";
    case 0x8215:
        return "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE";
    case 0x8214:
        return "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE";
    case 0x8210:
        return "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING";
    case 0x8211:
        return "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE";
    case 0x8216:
        return "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE";
    case 0x8213:
        return "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE";
    case 0x8DA7:
        return "GL_FRAMEBUFFER_ATTACHMENT_LAYERED";
    case 0x8CD1:
        return "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME";
    case 0x8CD0:
        return "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE";
    case 0x8212:
        return "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE";
    case 0x8217:
        return "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE";
    case 0x8CD3:
        return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE";
    case 0x8CD4:
        return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER";
    case 0x8CD2:
        return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL";
    case 0x00000400:
        return "GL_FRAMEBUFFER_BARRIER_BIT/GL_FRONT_LEFT/GL_STENCIL_BUFFER_BIT";
    case 0x828B:
        return "GL_FRAMEBUFFER_BLEND";
    case 0x8CD5:
        return "GL_FRAMEBUFFER_COMPLETE";
    case 0x8218:
        return "GL_FRAMEBUFFER_DEFAULT";
    case 0x9314:
        return "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS";
    case 0x9311:
        return "GL_FRAMEBUFFER_DEFAULT_HEIGHT";
    case 0x9312:
        return "GL_FRAMEBUFFER_DEFAULT_LAYERS";
    case 0x9313:
        return "GL_FRAMEBUFFER_DEFAULT_SAMPLES";
    case 0x9310:
        return "GL_FRAMEBUFFER_DEFAULT_WIDTH";
    case 0x8CD6:
        return "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT";
    case 0x8CDB:
        return "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER";
    case 0x8DA8:
        return "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS";
    case 0x8CD7:
        return "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";
    case 0x8D56:
        return "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE";
    case 0x8CDC:
        return "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER";
    case 0x8289:
        return "GL_FRAMEBUFFER_RENDERABLE";
    case 0x828A:
        return "GL_FRAMEBUFFER_RENDERABLE_LAYERED";
    case 0x8DB9:
        return "GL_FRAMEBUFFER_SRGB";
    case 0x8219:
        return "GL_FRAMEBUFFER_UNDEFINED";
    case 0x8CDD:
        return "GL_FRAMEBUFFER_UNSUPPORTED";
    case 0x0404:
        return "GL_FRONT";
    case 0x0408:
        return "GL_FRONT_AND_BACK";
    case 0x0B46:
        return "GL_FRONT_FACE";
    case 0x0401:
        return "GL_FRONT_RIGHT";
    case 0x82B7:
        return "GL_FULL_SUPPORT";
    case 0x8006:
        return "GL_FUNC_ADD";
    case 0x800B:
        return "GL_FUNC_REVERSE_SUBTRACT";
    case 0x800A:
        return "GL_FUNC_SUBTRACT";
    case 0x8191:
        return "GL_GENERATE_MIPMAP";
    case 0x8192:
        return "GL_GENERATE_MIPMAP_HINT";
    case 0x8917:
        return "GL_GEOMETRY_INPUT_TYPE";
    case 0x8918:
        return "GL_GEOMETRY_OUTPUT_TYPE";
    case 0x8DD9:
        return "GL_GEOMETRY_SHADER";
    case 0x887F:
        return "GL_GEOMETRY_SHADER_INVOCATIONS";
    case 0x82F3:
        return "GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED";
    case 0x92EB:
        return "GL_GEOMETRY_SUBROUTINE";
    case 0x92F1:
        return "GL_GEOMETRY_SUBROUTINE_UNIFORM";
    case 0x829E:
        return "GL_GEOMETRY_TEXTURE";
    case 0x8916:
        return "GL_GEOMETRY_VERTICES_OUT";
    case 0x0206:
        return "GL_GEQUAL";
    case 0x8291:
        return "GL_GET_TEXTURE_IMAGE_FORMAT";
    case 0x8292:
        return "GL_GET_TEXTURE_IMAGE_TYPE";
    case 0x0204:
        return "GL_GREATER";
    case 0x1904:
        return "GL_GREEN";
    case 0x0D19:
        return "GL_GREEN_BIAS";
    case 0x0D53:
        return "GL_GREEN_BITS";
    case 0x8D95:
        return "GL_GREEN_INTEGER";
    case 0x0D18:
        return "GL_GREEN_SCALE";
    case 0x8253:
        return "GL_GUILTY_CONTEXT_RESET";
    case 0x140B:
        return "GL_HALF_FLOAT";
    case 0x8DF2:
        return "GL_HIGH_FLOAT";
    case 0x8DF5:
        return "GL_HIGH_INT";
    case 0x00008000:
        return "GL_HINT_BIT";
    case 0x8024:
        return "GL_HISTOGRAM";
    case 0x904C:
        return "GL_IMAGE_1D";
    case 0x9052:
        return "GL_IMAGE_1D_ARRAY";
    case 0x904D:
        return "GL_IMAGE_2D";
    case 0x9053:
        return "GL_IMAGE_2D_ARRAY";
    case 0x9055:
        return "GL_IMAGE_2D_MULTISAMPLE";
    case 0x9056:
        return "GL_IMAGE_2D_MULTISAMPLE_ARRAY";
    case 0x904F:
        return "GL_IMAGE_2D_RECT";
    case 0x904E:
        return "GL_IMAGE_3D";
    case 0x8F3E:
        return "GL_IMAGE_BINDING_ACCESS";
    case 0x906E:
        return "GL_IMAGE_BINDING_FORMAT";
    case 0x8F3D:
        return "GL_IMAGE_BINDING_LAYER";
    case 0x8F3C:
        return "GL_IMAGE_BINDING_LAYERED";
    case 0x8F3B:
        return "GL_IMAGE_BINDING_LEVEL";
    case 0x8F3A:
        return "GL_IMAGE_BINDING_NAME";
    case 0x9051:
        return "GL_IMAGE_BUFFER";
    case 0x82C3:
        return "GL_IMAGE_CLASS_10_10_10_2";
    case 0x82C2:
        return "GL_IMAGE_CLASS_11_11_10";
    case 0x82BE:
        return "GL_IMAGE_CLASS_1_X_16";
    case 0x82BB:
        return "GL_IMAGE_CLASS_1_X_32";
    case 0x82C1:
        return "GL_IMAGE_CLASS_1_X_8";
    case 0x82BD:
        return "GL_IMAGE_CLASS_2_X_16";
    case 0x82BA:
        return "GL_IMAGE_CLASS_2_X_32";
    case 0x82C0:
        return "GL_IMAGE_CLASS_2_X_8";
    case 0x82BC:
        return "GL_IMAGE_CLASS_4_X_16";
    case 0x82B9:
        return "GL_IMAGE_CLASS_4_X_32";
    case 0x82BF:
        return "GL_IMAGE_CLASS_4_X_8";
    case 0x82A8:
        return "GL_IMAGE_COMPATIBILITY_CLASS";
    case 0x9050:
        return "GL_IMAGE_CUBE";
    case 0x9054:
        return "GL_IMAGE_CUBE_MAP_ARRAY";
    case 0x90C9:
        return "GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS";
    case 0x90C8:
        return "GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE";
    case 0x90C7:
        return "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE";
    case 0x82A9:
        return "GL_IMAGE_PIXEL_FORMAT";
    case 0x82AA:
        return "GL_IMAGE_PIXEL_TYPE";
    case 0x82A7:
        return "GL_IMAGE_TEXEL_SIZE";
    case 0x8B9B:
        return "GL_IMPLEMENTATION_COLOR_READ_FORMAT";
    case 0x8B9A:
        return "GL_IMPLEMENTATION_COLOR_READ_TYPE";
    case 0x1E02:
        return "GL_INCR";
    case 0x8507:
        return "GL_INCR_WRAP";
    case 0x8222:
        return "GL_INDEX";
    case 0x8077:
        return "GL_INDEX_ARRAY";
    case 0x8899:
        return "GL_INDEX_ARRAY_BUFFER_BINDING";
    case 0x8091:
        return "GL_INDEX_ARRAY_POINTER";
    case 0x8086:
        return "GL_INDEX_ARRAY_STRIDE";
    case 0x8085:
        return "GL_INDEX_ARRAY_TYPE";
    case 0x0D51:
        return "GL_INDEX_BITS";
    case 0x0C20:
        return "GL_INDEX_CLEAR_VALUE";
    case 0x0BF1:
        return "GL_INDEX_LOGIC_OP";
    case 0x0C30:
        return "GL_INDEX_MODE";
    case 0x0D13:
        return "GL_INDEX_OFFSET";
    case 0x0D12:
        return "GL_INDEX_SHIFT";
    case 0x0C21:
        return "GL_INDEX_WRITEMASK";
    case 0x8B84:
        return "GL_INFO_LOG_LENGTH";
    case 0x8254:
        return "GL_INNOCENT_CONTEXT_RESET";
    case 0x1404:
        return "GL_INT";
    case 0x8049:
        return "GL_INTENSITY";
    case 0x804C:
        return "GL_INTENSITY12";
    case 0x804D:
        return "GL_INTENSITY16";
    case 0x804A:
        return "GL_INTENSITY4";
    case 0x804B:
        return "GL_INTENSITY8";
    case 0x8C8C:
        return "GL_INTERLEAVED_ATTRIBS";
    case 0x8274:
        return "GL_INTERNALFORMAT_ALPHA_SIZE";
    case 0x827B:
        return "GL_INTERNALFORMAT_ALPHA_TYPE";
    case 0x8273:
        return "GL_INTERNALFORMAT_BLUE_SIZE";
    case 0x827A:
        return "GL_INTERNALFORMAT_BLUE_TYPE";
    case 0x8275:
        return "GL_INTERNALFORMAT_DEPTH_SIZE";
    case 0x827C:
        return "GL_INTERNALFORMAT_DEPTH_TYPE";
    case 0x8272:
        return "GL_INTERNALFORMAT_GREEN_SIZE";
    case 0x8279:
        return "GL_INTERNALFORMAT_GREEN_TYPE";
    case 0x8270:
        return "GL_INTERNALFORMAT_PREFERRED";
    case 0x8271:
        return "GL_INTERNALFORMAT_RED_SIZE";
    case 0x8278:
        return "GL_INTERNALFORMAT_RED_TYPE";
    case 0x8277:
        return "GL_INTERNALFORMAT_SHARED_SIZE";
    case 0x8276:
        return "GL_INTERNALFORMAT_STENCIL_SIZE";
    case 0x827D:
        return "GL_INTERNALFORMAT_STENCIL_TYPE";
    case 0x826F:
        return "GL_INTERNALFORMAT_SUPPORTED";
    case 0x8575:
        return "GL_INTERPOLATE";
    case 0x8D9F:
        return "GL_INT_2_10_10_10_REV";
    case 0x9057:
        return "GL_INT_IMAGE_1D";
    case 0x905D:
        return "GL_INT_IMAGE_1D_ARRAY";
    case 0x9058:
        return "GL_INT_IMAGE_2D";
    case 0x905E:
        return "GL_INT_IMAGE_2D_ARRAY";
    case 0x9060:
        return "GL_INT_IMAGE_2D_MULTISAMPLE";
    case 0x9061:
        return "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY";
    case 0x905A:
        return "GL_INT_IMAGE_2D_RECT";
    case 0x9059:
        return "GL_INT_IMAGE_3D";
    case 0x905C:
        return "GL_INT_IMAGE_BUFFER";
    case 0x905B:
        return "GL_INT_IMAGE_CUBE";
    case 0x905F:
        return "GL_INT_IMAGE_CUBE_MAP_ARRAY";
    case 0x8DC9:
        return "GL_INT_SAMPLER_1D";
    case 0x8DCE:
        return "GL_INT_SAMPLER_1D_ARRAY";
    case 0x8DCA:
        return "GL_INT_SAMPLER_2D";
    case 0x8DCF:
        return "GL_INT_SAMPLER_2D_ARRAY";
    case 0x9109:
        return "GL_INT_SAMPLER_2D_MULTISAMPLE";
    case 0x910C:
        return "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY";
    case 0x8DCD:
        return "GL_INT_SAMPLER_2D_RECT";
    case 0x8DCB:
        return "GL_INT_SAMPLER_3D";
    case 0x8DD0:
        return "GL_INT_SAMPLER_BUFFER";
    case 0x8DCC:
        return "GL_INT_SAMPLER_CUBE";
    case 0x900E:
        return "GL_INT_SAMPLER_CUBE_MAP_ARRAY";
    case 0x8B53:
        return "GL_INT_VEC2";
    case 0x8B54:
        return "GL_INT_VEC3";
    case 0x8B55:
        return "GL_INT_VEC4";
    case 0x0500:
        return "GL_INVALID_ENUM";
    case 0x0506:
        return "GL_INVALID_FRAMEBUFFER_OPERATION";
    case 0x0502:
        return "GL_INVALID_OPERATION";
    case 0x0501:
        return "GL_INVALID_VALUE";
    case 0x150A:
        return "GL_INVERT";
    case 0x8E7A:
        return "GL_ISOLINES";
    case 0x92E7:
        return "GL_IS_PER_PATCH";
    case 0x9300:
        return "GL_IS_ROW_MAJOR";
    case 0x1E00:
        return "GL_KEEP";
    case 0x8E4E:
        return "GL_LAST_VERTEX_CONVENTION";
    case 0x825E:
        return "GL_LAYER_PROVOKING_VERTEX";
    case 0x0406:
        return "GL_LEFT";
    case 0x0203:
        return "GL_LEQUAL";
    case 0x0201:
        return "GL_LESS";
    case 0x4001:
        return "GL_LIGHT1";
    case 0x4002:
        return "GL_LIGHT2";
    case 0x4003:
        return "GL_LIGHT3";
    case 0x4004:
        return "GL_LIGHT4";
    case 0x4005:
        return "GL_LIGHT5";
    case 0x4006:
        return "GL_LIGHT6";
    case 0x4007:
        return "GL_LIGHT7";
    case 0x0B50:
        return "GL_LIGHTING";
    // case 0x00000040: return "GL_LIGHTING_BIT";
    case 0x0B53:
        return "GL_LIGHT_MODEL_AMBIENT";
    case 0x81F8:
        return "GL_LIGHT_MODEL_COLOR_CONTROL";
    case 0x0B51:
        return "GL_LIGHT_MODEL_LOCAL_VIEWER";
    case 0x0B52:
        return "GL_LIGHT_MODEL_TWO_SIDE";
    case 0x1B01:
        return "GL_LINE";
    case 0x2601:
        return "GL_LINEAR";
    case 0x1208:
        return "GL_LINEAR_ATTENUATION";
    case 0x2703:
        return "GL_LINEAR_MIPMAP_LINEAR";
    case 0x2701:
        return "GL_LINEAR_MIPMAP_NEAREST";
    // case 0x0001: return "GL_LINES";
    case 0x000A:
        return "GL_LINES_ADJACENCY";
    // case 0x0002: return "GL_LINE_LOOP";
    case 0x0707:
        return "GL_LINE_RESET_TOKEN";
    case 0x0B20:
        return "GL_LINE_SMOOTH";
    case 0x0C52:
        return "GL_LINE_SMOOTH_HINT";
    case 0x0B24:
        return "GL_LINE_STIPPLE";
    case 0x0B25:
        return "GL_LINE_STIPPLE_PATTERN";
    case 0x0B26:
        return "GL_LINE_STIPPLE_REPEAT";
    case 0x0003:
        return "GL_LINE_STRIP";
    case 0x000B:
        return "GL_LINE_STRIP_ADJACENCY";
    case 0x0702:
        return "GL_LINE_TOKEN";
    case 0x0B21:
        return "GL_LINE_WIDTH";
    case 0x0B23:
        return "GL_LINE_WIDTH_GRANULARITY";
    case 0x0B22:
        return "GL_LINE_WIDTH_RANGE";
    case 0x8B82:
        return "GL_LINK_STATUS";
    case 0x0B32:
        return "GL_LIST_BASE";
    case 0x00020000:
        return "GL_LIST_BIT";
    case 0x0B33:
        return "GL_LIST_INDEX";
    case 0x0B30:
        return "GL_LIST_MODE";
    case 0x0101:
        return "GL_LOAD";
    case 0x930E:
        return "GL_LOCATION";
    case 0x934A:
        return "GL_LOCATION_COMPONENT";
    case 0x930F:
        return "GL_LOCATION_INDEX";
    // case 0x0BF1: return "GL_LOGIC_OP";
    case 0x0BF0:
        return "GL_LOGIC_OP_MODE";
    case 0x8252:
        return "GL_LOSE_CONTEXT_ON_RESET";
    case 0x8CA1:
        return "GL_LOWER_LEFT";
    case 0x8DF0:
        return "GL_LOW_FLOAT";
    case 0x8DF3:
        return "GL_LOW_INT";
    case 0x1909:
        return "GL_LUMINANCE";
    case 0x8041:
        return "GL_LUMINANCE12";
    case 0x8047:
        return "GL_LUMINANCE12_ALPHA12";
    case 0x8046:
        return "GL_LUMINANCE12_ALPHA4";
    case 0x8042:
        return "GL_LUMINANCE16";
    case 0x8048:
        return "GL_LUMINANCE16_ALPHA16";
    case 0x803F:
        return "GL_LUMINANCE4";
    case 0x8043:
        return "GL_LUMINANCE4_ALPHA4";
    case 0x8044:
        return "GL_LUMINANCE6_ALPHA2";
    case 0x8040:
        return "GL_LUMINANCE8";
    case 0x8045:
        return "GL_LUMINANCE8_ALPHA8";
    case 0x190A:
        return "GL_LUMINANCE_ALPHA";
    case 0x821B:
        return "GL_MAJOR_VERSION";
    case 0x8294:
        return "GL_MANUAL_GENERATE_MIPMAP";
    case 0x0D90:
        return "GL_MAP1_COLOR_4";
    case 0x0DD0:
        return "GL_MAP1_GRID_DOMAIN";
    case 0x0DD1:
        return "GL_MAP1_GRID_SEGMENTS";
    case 0x0D91:
        return "GL_MAP1_INDEX";
    case 0x0D92:
        return "GL_MAP1_NORMAL";
    case 0x0D93:
        return "GL_MAP1_TEXTURE_COORD_1";
    case 0x0D94:
        return "GL_MAP1_TEXTURE_COORD_2";
    case 0x0D95:
        return "GL_MAP1_TEXTURE_COORD_3";
    case 0x0D96:
        return "GL_MAP1_TEXTURE_COORD_4";
    case 0x0D97:
        return "GL_MAP1_VERTEX_3";
    case 0x0D98:
        return "GL_MAP1_VERTEX_4";
    case 0x0DB0:
        return "GL_MAP2_COLOR_4";
    case 0x0DD2:
        return "GL_MAP2_GRID_DOMAIN";
    case 0x0DD3:
        return "GL_MAP2_GRID_SEGMENTS";
    case 0x0DB1:
        return "GL_MAP2_INDEX";
    case 0x0DB2:
        return "GL_MAP2_NORMAL";
    case 0x0DB3:
        return "GL_MAP2_TEXTURE_COORD_1";
    case 0x0DB4:
        return "GL_MAP2_TEXTURE_COORD_2";
    case 0x0DB5:
        return "GL_MAP2_TEXTURE_COORD_3";
    case 0x0DB6:
        return "GL_MAP2_TEXTURE_COORD_4";
    case 0x0DB7:
        return "GL_MAP2_VERTEX_3";
    case 0x0DB8:
        return "GL_MAP2_VERTEX_4";
    // case 0x0080: return "GL_MAP_COHERENT_BIT";
    case 0x0D10:
        return "GL_MAP_COLOR";
    case 0x0010:
        return "GL_MAP_FLUSH_EXPLICIT_BIT";
    // case 0x0008: return "GL_MAP_INVALIDATE_BUFFER_BIT";
    // case 0x0004: return "GL_MAP_INVALIDATE_RANGE_BIT";
    // case 0x0040: return "GL_MAP_PERSISTENT_BIT";
    // case 0x0001: return "GL_MAP_READ_BIT";
    case 0x0D11:
        return "GL_MAP_STENCIL";
    // case 0x0020: return "GL_MAP_UNSYNCHRONIZED_BIT";
    // case 0x0002: return "GL_MAP_WRITE_BIT";
    case 0x0BA0:
        return "GL_MATRIX_MODE";
    case 0x92FF:
        return "GL_MATRIX_STRIDE";
    case 0x8008:
        return "GL_MAX";
    case 0x8073:
        return "GL_MAX_3D_TEXTURE_SIZE";
    case 0x88FF:
        return "GL_MAX_ARRAY_TEXTURE_LAYERS";
    case 0x92DC:
        return "GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS";
    case 0x92D8:
        return "GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE";
    case 0x0D35:
        return "GL_MAX_ATTRIB_STACK_DEPTH";
    case 0x0D3B:
        return "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH";
    case 0x0D32:
        return "GL_MAX_CLIP_DISTANCES";
    // case 0x0D32: return "GL_MAX_CLIP_PLANES";
    case 0x8CDF:
        return "GL_MAX_COLOR_ATTACHMENTS";
    case 0x910E:
        return "GL_MAX_COLOR_TEXTURE_SAMPLES";
    case 0x92D7:
        return "GL_MAX_COMBINED_ATOMIC_COUNTERS";
    case 0x92D1:
        return "GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS";
    case 0x82FA:
        return "GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES";
    case 0x8266:
        return "GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS";
    case 0x8282:
        return "GL_MAX_COMBINED_DIMENSIONS";
    case 0x8A33:
        return "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS";
    case 0x8A32:
        return "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS";
    case 0x90CF:
        return "GL_MAX_COMBINED_IMAGE_UNIFORMS";
    case 0x8F39:
        return "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS";
    // case 0x8F39: return "GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES";
    case 0x90DC:
        return "GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS";
    case 0x8E1E:
        return "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS";
    case 0x8E1F:
        return "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS";
    case 0x8B4D:
        return "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS";
    case 0x8A2E:
        return "GL_MAX_COMBINED_UNIFORM_BLOCKS";
    case 0x8A31:
        return "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS";
    case 0x8265:
        return "GL_MAX_COMPUTE_ATOMIC_COUNTERS";
    case 0x8264:
        return "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS";
    case 0x91BD:
        return "GL_MAX_COMPUTE_IMAGE_UNIFORMS";
    case 0x90DB:
        return "GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS";
    case 0x8262:
        return "GL_MAX_COMPUTE_SHARED_MEMORY_SIZE";
    case 0x91BC:
        return "GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS";
    case 0x91BB:
        return "GL_MAX_COMPUTE_UNIFORM_BLOCKS";
    case 0x8263:
        return "GL_MAX_COMPUTE_UNIFORM_COMPONENTS";
    case 0x91BE:
        return "GL_MAX_COMPUTE_WORK_GROUP_COUNT";
    case 0x90EB:
        return "GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS";
    case 0x91BF:
        return "GL_MAX_COMPUTE_WORK_GROUP_SIZE";
    case 0x851C:
        return "GL_MAX_CUBE_MAP_TEXTURE_SIZE";
    case 0x82F9:
        return "GL_MAX_CULL_DISTANCES";
    case 0x826C:
        return "GL_MAX_DEBUG_GROUP_STACK_DEPTH";
    case 0x9144:
        return "GL_MAX_DEBUG_LOGGED_MESSAGES";
    case 0x9143:
        return "GL_MAX_DEBUG_MESSAGE_LENGTH";
    case 0x8280:
        return "GL_MAX_DEPTH";
    case 0x910F:
        return "GL_MAX_DEPTH_TEXTURE_SAMPLES";
    case 0x8824:
        return "GL_MAX_DRAW_BUFFERS";
    case 0x88FC:
        return "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS";
    case 0x80E9:
        return "GL_MAX_ELEMENTS_INDICES";
    case 0x80E8:
        return "GL_MAX_ELEMENTS_VERTICES";
    case 0x8D6B:
        return "GL_MAX_ELEMENT_INDEX";
    case 0x0D30:
        return "GL_MAX_EVAL_ORDER";
    case 0x92D6:
        return "GL_MAX_FRAGMENT_ATOMIC_COUNTERS";
    case 0x92D0:
        return "GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS";
    case 0x90CE:
        return "GL_MAX_FRAGMENT_IMAGE_UNIFORMS";
    case 0x9125:
        return "GL_MAX_FRAGMENT_INPUT_COMPONENTS";
    case 0x8E5C:
        return "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET";
    case 0x90DA:
        return "GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS";
    case 0x8A2D:
        return "GL_MAX_FRAGMENT_UNIFORM_BLOCKS";
    case 0x8B49:
        return "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS";
    case 0x8DFD:
        return "GL_MAX_FRAGMENT_UNIFORM_VECTORS";
    case 0x9316:
        return "GL_MAX_FRAMEBUFFER_HEIGHT";
    case 0x9317:
        return "GL_MAX_FRAMEBUFFER_LAYERS";
    case 0x9318:
        return "GL_MAX_FRAMEBUFFER_SAMPLES";
    case 0x9315:
        return "GL_MAX_FRAMEBUFFER_WIDTH";
    case 0x92D5:
        return "GL_MAX_GEOMETRY_ATOMIC_COUNTERS";
    case 0x92CF:
        return "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS";
    case 0x90CD:
        return "GL_MAX_GEOMETRY_IMAGE_UNIFORMS";
    case 0x9123:
        return "GL_MAX_GEOMETRY_INPUT_COMPONENTS";
    case 0x9124:
        return "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS";
    case 0x8DE0:
        return "GL_MAX_GEOMETRY_OUTPUT_VERTICES";
    case 0x8E5A:
        return "GL_MAX_GEOMETRY_SHADER_INVOCATIONS";
    case 0x90D7:
        return "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS";
    case 0x8C29:
        return "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS";
    case 0x8DE1:
        return "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS";
    case 0x8A2C:
        return "GL_MAX_GEOMETRY_UNIFORM_BLOCKS";
    case 0x8DDF:
        return "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS";
    case 0x827F:
        return "GL_MAX_HEIGHT";
    case 0x906D:
        return "GL_MAX_IMAGE_SAMPLES";
    case 0x8F38:
        return "GL_MAX_IMAGE_UNITS";
    case 0x9110:
        return "GL_MAX_INTEGER_SAMPLES";
    case 0x82E8:
        return "GL_MAX_LABEL_LENGTH";
    case 0x8281:
        return "GL_MAX_LAYERS";
    case 0x0D31:
        return "GL_MAX_LIGHTS";
    case 0x0B31:
        return "GL_MAX_LIST_NESTING";
    case 0x0D36:
        return "GL_MAX_MODELVIEW_STACK_DEPTH";
    case 0x92F6:
        return "GL_MAX_NAME_LENGTH";
    case 0x0D37:
        return "GL_MAX_NAME_STACK_DEPTH";
    case 0x92F7:
        return "GL_MAX_NUM_ACTIVE_VARIABLES";
    case 0x92F8:
        return "GL_MAX_NUM_COMPATIBLE_SUBROUTINES";
    case 0x8E7D:
        return "GL_MAX_PATCH_VERTICES";
    case 0x0D34:
        return "GL_MAX_PIXEL_MAP_TABLE";
    case 0x8905:
        return "GL_MAX_PROGRAM_TEXEL_OFFSET";
    case 0x8E5F:
        return "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET";
    case 0x0D38:
        return "GL_MAX_PROJECTION_STACK_DEPTH";
    case 0x84F8:
        return "GL_MAX_RECTANGLE_TEXTURE_SIZE";
    case 0x84E8:
        return "GL_MAX_RENDERBUFFER_SIZE";
    case 0x8D57:
        return "GL_MAX_SAMPLES";
    case 0x8E59:
        return "GL_MAX_SAMPLE_MASK_WORDS";
    case 0x9111:
        return "GL_MAX_SERVER_WAIT_TIMEOUT";
    case 0x90DE:
        return "GL_MAX_SHADER_STORAGE_BLOCK_SIZE";
    case 0x90DD:
        return "GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS";
    case 0x8DE7:
        return "GL_MAX_SUBROUTINES";
    case 0x8DE8:
        return "GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS";
    case 0x92D3:
        return "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS";
    case 0x92CD:
        return "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS";
    case 0x90CB:
        return "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS";
    case 0x886C:
        return "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS";
    case 0x8E83:
        return "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS";
    case 0x90D8:
        return "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS";
    case 0x8E81:
        return "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS";
    case 0x8E85:
        return "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS";
    case 0x8E89:
        return "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS";
    case 0x8E7F:
        return "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS";
    case 0x92D4:
        return "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS";
    case 0x92CE:
        return "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS";
    case 0x90CC:
        return "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS";
    case 0x886D:
        return "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS";
    case 0x8E86:
        return "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS";
    case 0x90D9:
        return "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS";
    case 0x8E82:
        return "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS";
    case 0x8E8A:
        return "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS";
    case 0x8E80:
        return "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS";
    case 0x8E7E:
        return "GL_MAX_TESS_GEN_LEVEL";
    case 0x8E84:
        return "GL_MAX_TESS_PATCH_COMPONENTS";
    case 0x8C2B:
        return "GL_MAX_TEXTURE_BUFFER_SIZE";
    case 0x8871:
        return "GL_MAX_TEXTURE_COORDS";
    case 0x8872:
        return "GL_MAX_TEXTURE_IMAGE_UNITS";
    case 0x84FD:
        return "GL_MAX_TEXTURE_LOD_BIAS";
    case 0x84FF:
        return "GL_MAX_TEXTURE_MAX_ANISOTROPY";
    case 0x0D33:
        return "GL_MAX_TEXTURE_SIZE";
    case 0x0D39:
        return "GL_MAX_TEXTURE_STACK_DEPTH";
    case 0x84E2:
        return "GL_MAX_TEXTURE_UNITS";
    case 0x8E70:
        return "GL_MAX_TRANSFORM_FEEDBACK_BUFFERS";
    case 0x8C8A:
        return "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS";
    case 0x8C8B:
        return "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS";
    case 0x8C80:
        return "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS";
    case 0x8A30:
        return "GL_MAX_UNIFORM_BLOCK_SIZE";
    case 0x8A2F:
        return "GL_MAX_UNIFORM_BUFFER_BINDINGS";
    case 0x826E:
        return "GL_MAX_UNIFORM_LOCATIONS";
    case 0x8B4B:
        return "GL_MAX_VARYING_COMPONENTS";
    // case 0x8B4B: return "GL_MAX_VARYING_FLOATS";
    case 0x8DFC:
        return "GL_MAX_VARYING_VECTORS";
    case 0x92D2:
        return "GL_MAX_VERTEX_ATOMIC_COUNTERS";
    case 0x92CC:
        return "GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS";
    case 0x8869:
        return "GL_MAX_VERTEX_ATTRIBS";
    case 0x82DA:
        return "GL_MAX_VERTEX_ATTRIB_BINDINGS";
    case 0x82D9:
        return "GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET";
    case 0x82E5:
        return "GL_MAX_VERTEX_ATTRIB_STRIDE";
    case 0x90CA:
        return "GL_MAX_VERTEX_IMAGE_UNIFORMS";
    case 0x9122:
        return "GL_MAX_VERTEX_OUTPUT_COMPONENTS";
    case 0x90D6:
        return "GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS";
    case 0x8E71:
        return "GL_MAX_VERTEX_STREAMS";
    case 0x8B4C:
        return "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS";
    case 0x8A2B:
        return "GL_MAX_VERTEX_UNIFORM_BLOCKS";
    case 0x8B4A:
        return "GL_MAX_VERTEX_UNIFORM_COMPONENTS";
    case 0x8DFB:
        return "GL_MAX_VERTEX_UNIFORM_VECTORS";
    case 0x825B:
        return "GL_MAX_VIEWPORTS";
    case 0x0D3A:
        return "GL_MAX_VIEWPORT_DIMS";
    case 0x827E:
        return "GL_MAX_WIDTH";
    case 0x8DF1:
        return "GL_MEDIUM_FLOAT";
    case 0x8DF4:
        return "GL_MEDIUM_INT";
    case 0x8007:
        return "GL_MIN";
    case 0x802E:
        return "GL_MINMAX";
    case 0x821C:
        return "GL_MINOR_VERSION";
    case 0x8E5B:
        return "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET";
    case 0x90BC:
        return "GL_MIN_MAP_BUFFER_ALIGNMENT";
    case 0x8904:
        return "GL_MIN_PROGRAM_TEXEL_OFFSET";
    case 0x8E5E:
        return "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET";
    case 0x8C37:
        return "GL_MIN_SAMPLE_SHADING_VALUE";
    case 0x8293:
        return "GL_MIPMAP";
    case 0x8370:
        return "GL_MIRRORED_REPEAT";
    case 0x8743:
        return "GL_MIRROR_CLAMP_TO_EDGE";
    case 0x1700:
        return "GL_MODELVIEW";
    case 0x0BA6:
        return "GL_MODELVIEW_MATRIX";
    case 0x0BA3:
        return "GL_MODELVIEW_STACK_DEPTH";
    case 0x2100:
        return "GL_MODULATE";
    case 0x0103:
        return "GL_MULT";
    case 0x809D:
        return "GL_MULTISAMPLE";
    case 0x20000000:
        return "GL_MULTISAMPLE_BIT";
    case 0x2A25:
        return "GL_N3F_V3F";
    case 0x92F9:
        return "GL_NAME_LENGTH";
    case 0x0D70:
        return "GL_NAME_STACK_DEPTH";
    case 0x150E:
        return "GL_NAND";
    case 0x2600:
        return "GL_NEAREST";
    case 0x2702:
        return "GL_NEAREST_MIPMAP_LINEAR";
    case 0x2700:
        return "GL_NEAREST_MIPMAP_NEAREST";
    case 0x935E:
        return "GL_NEGATIVE_ONE_TO_ONE";
    case 0x1102:
        return "GL_NICEST";
    // case 0: return "GL_NONE";
    case 0x1505:
        return "GL_NOOP";
    case 0x1508:
        return "GL_NOR";
    case 0x0BA1:
        return "GL_NORMALIZE";
    case 0x8075:
        return "GL_NORMAL_ARRAY";
    case 0x8897:
        return "GL_NORMAL_ARRAY_BUFFER_BINDING";
    case 0x808F:
        return "GL_NORMAL_ARRAY_POINTER";
    case 0x807F:
        return "GL_NORMAL_ARRAY_STRIDE";
    case 0x807E:
        return "GL_NORMAL_ARRAY_TYPE";
    case 0x8511:
        return "GL_NORMAL_MAP";
    case 0x0205:
        return "GL_NOTEQUAL";
    // case 0: return "GL_NO_ERROR";
    case 0x8261:
        return "GL_NO_RESET_NOTIFICATION";
    case 0x9304:
        return "GL_NUM_ACTIVE_VARIABLES";
    case 0x8E4A:
        return "GL_NUM_COMPATIBLE_SUBROUTINES";
    case 0x86A2:
        return "GL_NUM_COMPRESSED_TEXTURE_FORMATS";
    case 0x821D:
        return "GL_NUM_EXTENSIONS";
    case 0x87FE:
        return "GL_NUM_PROGRAM_BINARY_FORMATS";
    case 0x9380:
        return "GL_NUM_SAMPLE_COUNTS";
    case 0x8DF9:
        return "GL_NUM_SHADER_BINARY_FORMATS";
    case 0x82E9:
        return "GL_NUM_SHADING_LANGUAGE_VERSIONS";
    case 0x9554:
        return "GL_NUM_SPIR_V_EXTENSIONS";
    case 0x2401:
        return "GL_OBJECT_LINEAR";
    case 0x2501:
        return "GL_OBJECT_PLANE";
    case 0x9112:
        return "GL_OBJECT_TYPE";
    case 0x92FC:
        return "GL_OFFSET";
    // case 1: return "GL_ONE";
    case 0x8004:
        return "GL_ONE_MINUS_CONSTANT_ALPHA";
    case 0x8002:
        return "GL_ONE_MINUS_CONSTANT_COLOR";
    case 0x0305:
        return "GL_ONE_MINUS_DST_ALPHA";
    case 0x0307:
        return "GL_ONE_MINUS_DST_COLOR";
    case 0x88FB:
        return "GL_ONE_MINUS_SRC1_ALPHA";
    case 0x88FA:
        return "GL_ONE_MINUS_SRC1_COLOR";
    case 0x0303:
        return "GL_ONE_MINUS_SRC_ALPHA";
    case 0x0301:
        return "GL_ONE_MINUS_SRC_COLOR";
    case 0x8598:
        return "GL_OPERAND0_ALPHA";
    case 0x8590:
        return "GL_OPERAND0_RGB";
    case 0x8599:
        return "GL_OPERAND1_ALPHA";
    case 0x8591:
        return "GL_OPERAND1_RGB";
    case 0x859A:
        return "GL_OPERAND2_ALPHA";
    case 0x8592:
        return "GL_OPERAND2_RGB";
    case 0x1507:
        return "GL_OR";
    case 0x0A01:
        return "GL_ORDER";
    case 0x150D:
        return "GL_OR_INVERTED";
    case 0x150B:
        return "GL_OR_REVERSE";
    case 0x0505:
        return "GL_OUT_OF_MEMORY";
    case 0x0D05:
        return "GL_PACK_ALIGNMENT";
    case 0x912D:
        return "GL_PACK_COMPRESSED_BLOCK_DEPTH";
    case 0x912C:
        return "GL_PACK_COMPRESSED_BLOCK_HEIGHT";
    case 0x912E:
        return "GL_PACK_COMPRESSED_BLOCK_SIZE";
    case 0x912B:
        return "GL_PACK_COMPRESSED_BLOCK_WIDTH";
    case 0x806C:
        return "GL_PACK_IMAGE_HEIGHT";
    case 0x0D01:
        return "GL_PACK_LSB_FIRST";
    case 0x0D02:
        return "GL_PACK_ROW_LENGTH";
    case 0x806B:
        return "GL_PACK_SKIP_IMAGES";
    case 0x0D04:
        return "GL_PACK_SKIP_PIXELS";
    case 0x0D03:
        return "GL_PACK_SKIP_ROWS";
    case 0x0D00:
        return "GL_PACK_SWAP_BYTES";
    case 0x80EE:
        return "GL_PARAMETER_BUFFER";
    case 0x80EF:
        return "GL_PARAMETER_BUFFER_BINDING";
    case 0x0700:
        return "GL_PASS_THROUGH_TOKEN";
    case 0x000E:
        return "GL_PATCHES";
    case 0x8E73:
        return "GL_PATCH_DEFAULT_INNER_LEVEL";
    case 0x8E74:
        return "GL_PATCH_DEFAULT_OUTER_LEVEL";
    case 0x8E72:
        return "GL_PATCH_VERTICES";
    case 0x0C50:
        return "GL_PERSPECTIVE_CORRECTION_HINT";
    // case 0x00000080: return "GL_PIXEL_BUFFER_BARRIER_BIT";
    case 0x0C79:
        return "GL_PIXEL_MAP_A_TO_A";
    case 0x0CB9:
        return "GL_PIXEL_MAP_A_TO_A_SIZE";
    case 0x0C78:
        return "GL_PIXEL_MAP_B_TO_B";
    case 0x0CB8:
        return "GL_PIXEL_MAP_B_TO_B_SIZE";
    case 0x0C77:
        return "GL_PIXEL_MAP_G_TO_G";
    case 0x0CB7:
        return "GL_PIXEL_MAP_G_TO_G_SIZE";
    case 0x0C75:
        return "GL_PIXEL_MAP_I_TO_A";
    case 0x0CB5:
        return "GL_PIXEL_MAP_I_TO_A_SIZE";
    case 0x0C74:
        return "GL_PIXEL_MAP_I_TO_B";
    case 0x0CB4:
        return "GL_PIXEL_MAP_I_TO_B_SIZE";
    case 0x0C73:
        return "GL_PIXEL_MAP_I_TO_G";
    case 0x0CB3:
        return "GL_PIXEL_MAP_I_TO_G_SIZE";
    case 0x0C70:
        return "GL_PIXEL_MAP_I_TO_I";
    case 0x0CB0:
        return "GL_PIXEL_MAP_I_TO_I_SIZE";
    case 0x0C72:
        return "GL_PIXEL_MAP_I_TO_R";
    case 0x0CB2:
        return "GL_PIXEL_MAP_I_TO_R_SIZE";
    case 0x0C76:
        return "GL_PIXEL_MAP_R_TO_R";
    case 0x0CB6:
        return "GL_PIXEL_MAP_R_TO_R_SIZE";
    case 0x0C71:
        return "GL_PIXEL_MAP_S_TO_S";
    case 0x0CB1:
        return "GL_PIXEL_MAP_S_TO_S_SIZE";
    // case 0x00000020: return "GL_PIXEL_MODE_BIT";
    case 0x88EB:
        return "GL_PIXEL_PACK_BUFFER";
    case 0x88ED:
        return "GL_PIXEL_PACK_BUFFER_BINDING";
    case 0x88EC:
        return "GL_PIXEL_UNPACK_BUFFER";
    case 0x88EF:
        return "GL_PIXEL_UNPACK_BUFFER_BINDING";
    case 0x1B00:
        return "GL_POINT";
    // case 0x0000: return "GL_POINTS";
    // case 0x00000002: return "GL_POINT_BIT";
    case 0x8129:
        return "GL_POINT_DISTANCE_ATTENUATION";
    case 0x8128:
        return "GL_POINT_FADE_THRESHOLD_SIZE";
    case 0x0B11:
        return "GL_POINT_SIZE";
    case 0x0B13:
        return "GL_POINT_SIZE_GRANULARITY";
    case 0x8127:
        return "GL_POINT_SIZE_MAX";
    case 0x8126:
        return "GL_POINT_SIZE_MIN";
    case 0x0B12:
        return "GL_POINT_SIZE_RANGE";
    case 0x0B10:
        return "GL_POINT_SMOOTH";
    case 0x0C51:
        return "GL_POINT_SMOOTH_HINT";
    case 0x8861:
        return "GL_POINT_SPRITE";
    case 0x8CA0:
        return "GL_POINT_SPRITE_COORD_ORIGIN";
    case 0x0701:
        return "GL_POINT_TOKEN";
    case 0x0009:
        return "GL_POLYGON";
    // case 0x00000008: return "GL_POLYGON_BIT";
    case 0x0B40:
        return "GL_POLYGON_MODE";
    case 0x8E1B:
        return "GL_POLYGON_OFFSET_CLAMP";
    case 0x8038:
        return "GL_POLYGON_OFFSET_FACTOR";
    case 0x8037:
        return "GL_POLYGON_OFFSET_FILL";
    case 0x2A02:
        return "GL_POLYGON_OFFSET_LINE";
    case 0x2A01:
        return "GL_POLYGON_OFFSET_POINT";
    case 0x2A00:
        return "GL_POLYGON_OFFSET_UNITS";
    case 0x0B41:
        return "GL_POLYGON_SMOOTH";
    case 0x0C53:
        return "GL_POLYGON_SMOOTH_HINT";
    case 0x0B42:
        return "GL_POLYGON_STIPPLE";
    // case 0x00000010: return "GL_POLYGON_STIPPLE_BIT";
    case 0x0703:
        return "GL_POLYGON_TOKEN";
    case 0x1203:
        return "GL_POSITION";
    case 0x80D2:
        return "GL_POST_COLOR_MATRIX_COLOR_TABLE";
    case 0x80D1:
        return "GL_POST_CONVOLUTION_COLOR_TABLE";
    case 0x8578:
        return "GL_PREVIOUS";
    case 0x8577:
        return "GL_PRIMARY_COLOR";
    case 0x8C87:
        return "GL_PRIMITIVES_GENERATED";
    case 0x82EF:
        return "GL_PRIMITIVES_SUBMITTED";
    case 0x8F9D:
        return "GL_PRIMITIVE_RESTART";
    case 0x8D69:
        return "GL_PRIMITIVE_RESTART_FIXED_INDEX";
    case 0x8221:
        return "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED";
    case 0x8F9E:
        return "GL_PRIMITIVE_RESTART_INDEX";
    case 0x82E2:
        return "GL_PROGRAM";
    case 0x87FF:
        return "GL_PROGRAM_BINARY_FORMATS";
    case 0x8741:
        return "GL_PROGRAM_BINARY_LENGTH";
    case 0x8257:
        return "GL_PROGRAM_BINARY_RETRIEVABLE_HINT";
    case 0x92E3:
        return "GL_PROGRAM_INPUT";
    case 0x92E4:
        return "GL_PROGRAM_OUTPUT";
    case 0x82E4:
        return "GL_PROGRAM_PIPELINE";
    case 0x825A:
        return "GL_PROGRAM_PIPELINE_BINDING";
    case 0x8642:
        return "GL_PROGRAM_POINT_SIZE";
    case 0x8258:
        return "GL_PROGRAM_SEPARABLE";
    case 0x1701:
        return "GL_PROJECTION";
    case 0x0BA7:
        return "GL_PROJECTION_MATRIX";
    case 0x0BA4:
        return "GL_PROJECTION_STACK_DEPTH";
    case 0x8E4F:
        return "GL_PROVOKING_VERTEX";
    case 0x80D3:
        return "GL_PROXY_COLOR_TABLE";
    case 0x8025:
        return "GL_PROXY_HISTOGRAM";
    case 0x80D5:
        return "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE";
    case 0x80D4:
        return "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE";
    case 0x8063:
        return "GL_PROXY_TEXTURE_1D";
    case 0x8C19:
        return "GL_PROXY_TEXTURE_1D_ARRAY";
    case 0x8064:
        return "GL_PROXY_TEXTURE_2D";
    case 0x8C1B:
        return "GL_PROXY_TEXTURE_2D_ARRAY";
    case 0x9101:
        return "GL_PROXY_TEXTURE_2D_MULTISAMPLE";
    case 0x9103:
        return "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY";
    case 0x8070:
        return "GL_PROXY_TEXTURE_3D";
    case 0x851B:
        return "GL_PROXY_TEXTURE_CUBE_MAP";
    case 0x900B:
        return "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY";
    case 0x84F7:
        return "GL_PROXY_TEXTURE_RECTANGLE";
    case 0x2003:
        return "GL_Q";
    case 0x1209:
        return "GL_QUADRATIC_ATTENUATION";
    case 0x0007:
        return "GL_QUADS";
    case 0x8E4C:
        return "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION";
    // case 0x0008: return "GL_QUAD_STRIP";
    case 0x82E3:
        return "GL_QUERY";
    case 0x9192:
        return "GL_QUERY_BUFFER";
    // case 0x00008000: return "GL_QUERY_BUFFER_BARRIER_BIT";
    case 0x9193:
        return "GL_QUERY_BUFFER_BINDING";
    case 0x8E16:
        return "GL_QUERY_BY_REGION_NO_WAIT";
    case 0x8E1A:
        return "GL_QUERY_BY_REGION_NO_WAIT_INVERTED";
    case 0x8E15:
        return "GL_QUERY_BY_REGION_WAIT";
    case 0x8E19:
        return "GL_QUERY_BY_REGION_WAIT_INVERTED";
    case 0x8864:
        return "GL_QUERY_COUNTER_BITS";
    case 0x8E14:
        return "GL_QUERY_NO_WAIT";
    case 0x8E18:
        return "GL_QUERY_NO_WAIT_INVERTED";
    case 0x8866:
        return "GL_QUERY_RESULT";
    case 0x8867:
        return "GL_QUERY_RESULT_AVAILABLE";
    case 0x9194:
        return "GL_QUERY_RESULT_NO_WAIT";
    case 0x82EA:
        return "GL_QUERY_TARGET";
    case 0x8E13:
        return "GL_QUERY_WAIT";
    case 0x8E17:
        return "GL_QUERY_WAIT_INVERTED";
    case 0x2002:
        return "GL_R";
    case 0x8C3A:
        return "GL_R11F_G11F_B10F";
    case 0x822A:
        return "GL_R16";
    case 0x822D:
        return "GL_R16F";
    case 0x8233:
        return "GL_R16I";
    case 0x8234:
        return "GL_R16UI";
    case 0x8F98:
        return "GL_R16_SNORM";
    case 0x822E:
        return "GL_R32F";
    case 0x8235:
        return "GL_R32I";
    case 0x8236:
        return "GL_R32UI";
    case 0x2A10:
        return "GL_R3_G3_B2";
    case 0x8229:
        return "GL_R8";
    case 0x8231:
        return "GL_R8I";
    case 0x8232:
        return "GL_R8UI";
    case 0x8F94:
        return "GL_R8_SNORM";
    case 0x8C89:
        return "GL_RASTERIZER_DISCARD";
    case 0x0C02:
        return "GL_READ_BUFFER";
    case 0x8CA8:
        return "GL_READ_FRAMEBUFFER";
    case 0x8CAA:
        return "GL_READ_FRAMEBUFFER_BINDING";
    case 0x88B8:
        return "GL_READ_ONLY";
    case 0x828C:
        return "GL_READ_PIXELS";
    case 0x828D:
        return "GL_READ_PIXELS_FORMAT";
    case 0x828E:
        return "GL_READ_PIXELS_TYPE";
    case 0x88BA:
        return "GL_READ_WRITE";
    case 0x1903:
        return "GL_RED";
    case 0x0D15:
        return "GL_RED_BIAS";
    case 0x0D52:
        return "GL_RED_BITS";
    case 0x8D94:
        return "GL_RED_INTEGER";
    case 0x0D14:
        return "GL_RED_SCALE";
    case 0x930B:
        return "GL_REFERENCED_BY_COMPUTE_SHADER";
    case 0x930A:
        return "GL_REFERENCED_BY_FRAGMENT_SHADER";
    case 0x9309:
        return "GL_REFERENCED_BY_GEOMETRY_SHADER";
    case 0x9307:
        return "GL_REFERENCED_BY_TESS_CONTROL_SHADER";
    case 0x9308:
        return "GL_REFERENCED_BY_TESS_EVALUATION_SHADER";
    case 0x9306:
        return "GL_REFERENCED_BY_VERTEX_SHADER";
    case 0x8512:
        return "GL_REFLECTION_MAP";
    case 0x1C00:
        return "GL_RENDER";
    case 0x8D41:
        return "GL_RENDERBUFFER";
    case 0x8D53:
        return "GL_RENDERBUFFER_ALPHA_SIZE";
    case 0x8CA7:
        return "GL_RENDERBUFFER_BINDING";
    case 0x8D52:
        return "GL_RENDERBUFFER_BLUE_SIZE";
    case 0x8D54:
        return "GL_RENDERBUFFER_DEPTH_SIZE";
    case 0x8D51:
        return "GL_RENDERBUFFER_GREEN_SIZE";
    case 0x8D43:
        return "GL_RENDERBUFFER_HEIGHT";
    case 0x8D44:
        return "GL_RENDERBUFFER_INTERNAL_FORMAT";
    case 0x8D50:
        return "GL_RENDERBUFFER_RED_SIZE";
    case 0x8CAB:
        return "GL_RENDERBUFFER_SAMPLES";
    case 0x8D55:
        return "GL_RENDERBUFFER_STENCIL_SIZE";
    case 0x8D42:
        return "GL_RENDERBUFFER_WIDTH";
    case 0x1F01:
        return "GL_RENDERER";
    case 0x0C40:
        return "GL_RENDER_MODE";
    case 0x2901:
        return "GL_REPEAT";
    case 0x1E01:
        return "GL_REPLACE";
    case 0x803A:
        return "GL_RESCALE_NORMAL";
    case 0x8256:
        return "GL_RESET_NOTIFICATION_STRATEGY";
    case 0x0102:
        return "GL_RETURN";
    case 0x8227:
        return "GL_RG";
    case 0x822C:
        return "GL_RG16";
    case 0x822F:
        return "GL_RG16F";
    case 0x8239:
        return "GL_RG16I";
    case 0x823A:
        return "GL_RG16UI";
    case 0x8F99:
        return "GL_RG16_SNORM";
    case 0x8230:
        return "GL_RG32F";
    case 0x823B:
        return "GL_RG32I";
    case 0x823C:
        return "GL_RG32UI";
    case 0x822B:
        return "GL_RG8";
    case 0x8237:
        return "GL_RG8I";
    case 0x8238:
        return "GL_RG8UI";
    case 0x8F95:
        return "GL_RG8_SNORM";
    case 0x1907:
        return "GL_RGB";
    case 0x8052:
        return "GL_RGB10";
    case 0x8059:
        return "GL_RGB10_A2";
    case 0x906F:
        return "GL_RGB10_A2UI";
    case 0x8053:
        return "GL_RGB12";
    case 0x8054:
        return "GL_RGB16";
    case 0x881B:
        return "GL_RGB16F";
    case 0x8D89:
        return "GL_RGB16I";
    case 0x8D77:
        return "GL_RGB16UI";
    case 0x8F9A:
        return "GL_RGB16_SNORM";
    case 0x8815:
        return "GL_RGB32F";
    case 0x8D83:
        return "GL_RGB32I";
    case 0x8D71:
        return "GL_RGB32UI";
    case 0x804F:
        return "GL_RGB4";
    case 0x8050:
        return "GL_RGB5";
    case 0x8D62:
        return "GL_RGB565";
    case 0x8057:
        return "GL_RGB5_A1";
    case 0x8051:
        return "GL_RGB8";
    case 0x8D8F:
        return "GL_RGB8I";
    case 0x8D7D:
        return "GL_RGB8UI";
    case 0x8F96:
        return "GL_RGB8_SNORM";
    case 0x8C3D:
        return "GL_RGB9_E5";
    case 0x1908:
        return "GL_RGBA";
    case 0x805A:
        return "GL_RGBA12";
    case 0x805B:
        return "GL_RGBA16";
    case 0x881A:
        return "GL_RGBA16F";
    case 0x8D88:
        return "GL_RGBA16I";
    case 0x8D76:
        return "GL_RGBA16UI";
    case 0x8F9B:
        return "GL_RGBA16_SNORM";
    case 0x8055:
        return "GL_RGBA2";
    case 0x8814:
        return "GL_RGBA32F";
    case 0x8D82:
        return "GL_RGBA32I";
    case 0x8D70:
        return "GL_RGBA32UI";
    case 0x8056:
        return "GL_RGBA4";
    case 0x8058:
        return "GL_RGBA8";
    case 0x8D8E:
        return "GL_RGBA8I";
    case 0x8D7C:
        return "GL_RGBA8UI";
    case 0x8F97:
        return "GL_RGBA8_SNORM";
    case 0x8D99:
        return "GL_RGBA_INTEGER";
    case 0x0C31:
        return "GL_RGBA_MODE";
    case 0x8D98:
        return "GL_RGB_INTEGER";
    case 0x8573:
        return "GL_RGB_SCALE";
    case 0x8228:
        return "GL_RG_INTEGER";
    case 0x0407:
        return "GL_RIGHT";
    // case 0x2000: return "GL_S";
    case 0x82E6:
        return "GL_SAMPLER";
    case 0x8B5D:
        return "GL_SAMPLER_1D";
    case 0x8DC0:
        return "GL_SAMPLER_1D_ARRAY";
    case 0x8DC3:
        return "GL_SAMPLER_1D_ARRAY_SHADOW";
    case 0x8B61:
        return "GL_SAMPLER_1D_SHADOW";
    case 0x8B5E:
        return "GL_SAMPLER_2D";
    case 0x8DC1:
        return "GL_SAMPLER_2D_ARRAY";
    case 0x8DC4:
        return "GL_SAMPLER_2D_ARRAY_SHADOW";
    case 0x9108:
        return "GL_SAMPLER_2D_MULTISAMPLE";
    case 0x910B:
        return "GL_SAMPLER_2D_MULTISAMPLE_ARRAY";
    case 0x8B63:
        return "GL_SAMPLER_2D_RECT";
    case 0x8B64:
        return "GL_SAMPLER_2D_RECT_SHADOW";
    case 0x8B62:
        return "GL_SAMPLER_2D_SHADOW";
    case 0x8B5F:
        return "GL_SAMPLER_3D";
    case 0x8919:
        return "GL_SAMPLER_BINDING";
    case 0x8DC2:
        return "GL_SAMPLER_BUFFER";
    case 0x8B60:
        return "GL_SAMPLER_CUBE";
    case 0x900C:
        return "GL_SAMPLER_CUBE_MAP_ARRAY";
    case 0x900D:
        return "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW";
    case 0x8DC5:
        return "GL_SAMPLER_CUBE_SHADOW";
    case 0x80A9:
        return "GL_SAMPLES";
    case 0x8914:
        return "GL_SAMPLES_PASSED";
    case 0x809E:
        return "GL_SAMPLE_ALPHA_TO_COVERAGE";
    case 0x809F:
        return "GL_SAMPLE_ALPHA_TO_ONE";
    case 0x80A8:
        return "GL_SAMPLE_BUFFERS";
    case 0x80A0:
        return "GL_SAMPLE_COVERAGE";
    case 0x80AB:
        return "GL_SAMPLE_COVERAGE_INVERT";
    case 0x80AA:
        return "GL_SAMPLE_COVERAGE_VALUE";
    case 0x8E51:
        return "GL_SAMPLE_MASK";
    case 0x8E52:
        return "GL_SAMPLE_MASK_VALUE";
    case 0x8E50:
        return "GL_SAMPLE_POSITION";
    case 0x8C36:
        return "GL_SAMPLE_SHADING";
    case 0x00080000:
        return "GL_SCISSOR_BIT";
    case 0x0C10:
        return "GL_SCISSOR_BOX";
    case 0x0C11:
        return "GL_SCISSOR_TEST";
    case 0x845E:
        return "GL_SECONDARY_COLOR_ARRAY";
    case 0x889C:
        return "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING";
    case 0x845D:
        return "GL_SECONDARY_COLOR_ARRAY_POINTER";
    case 0x845A:
        return "GL_SECONDARY_COLOR_ARRAY_SIZE";
    case 0x845C:
        return "GL_SECONDARY_COLOR_ARRAY_STRIDE";
    case 0x845B:
        return "GL_SECONDARY_COLOR_ARRAY_TYPE";
    case 0x1C02:
        return "GL_SELECT";
    case 0x0DF3:
        return "GL_SELECTION_BUFFER_POINTER";
    case 0x0DF4:
        return "GL_SELECTION_BUFFER_SIZE";
    case 0x8012:
        return "GL_SEPARABLE_2D";
    case 0x8C8D:
        return "GL_SEPARATE_ATTRIBS";
    case 0x81FA:
        return "GL_SEPARATE_SPECULAR_COLOR";
    case 0x150F:
        return "GL_SET";
    case 0x82E1:
        return "GL_SHADER";
    case 0x8DF8:
        return "GL_SHADER_BINARY_FORMATS";
    case 0x9551:
        return "GL_SHADER_BINARY_FORMAT_SPIR_V";
    case 0x8DFA:
        return "GL_SHADER_COMPILER";
    // case 0x00000020: return "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT";
    case 0x82A6:
        return "GL_SHADER_IMAGE_ATOMIC";
    case 0x82A4:
        return "GL_SHADER_IMAGE_LOAD";
    case 0x82A5:
        return "GL_SHADER_IMAGE_STORE";
    case 0x8B88:
        return "GL_SHADER_SOURCE_LENGTH";
    // case 0x00002000: return "GL_SHADER_STORAGE_BARRIER_BIT";
    case 0x92E6:
        return "GL_SHADER_STORAGE_BLOCK";
    case 0x90D2:
        return "GL_SHADER_STORAGE_BUFFER";
    case 0x90D3:
        return "GL_SHADER_STORAGE_BUFFER_BINDING";
    case 0x90DF:
        return "GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT";
    case 0x90D5:
        return "GL_SHADER_STORAGE_BUFFER_SIZE";
    case 0x90D4:
        return "GL_SHADER_STORAGE_BUFFER_START";
    case 0x8B4F:
        return "GL_SHADER_TYPE";
    case 0x0B54:
        return "GL_SHADE_MODEL";
    case 0x8B8C:
        return "GL_SHADING_LANGUAGE_VERSION";
    case 0x1601:
        return "GL_SHININESS";
    case 0x1402:
        return "GL_SHORT";
    case 0x9119:
        return "GL_SIGNALED";
    case 0x8F9C:
        return "GL_SIGNED_NORMALIZED";
    case 0x82AC:
        return "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST";
    case 0x82AE:
        return "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE";
    case 0x82AD:
        return "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST";
    case 0x82AF:
        return "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE";
    case 0x81F9:
        return "GL_SINGLE_COLOR";
    case 0x8C46:
        return "GL_SLUMINANCE";
    case 0x8C47:
        return "GL_SLUMINANCE8";
    case 0x8C45:
        return "GL_SLUMINANCE8_ALPHA8";
    case 0x8C44:
        return "GL_SLUMINANCE_ALPHA";
    case 0x1D01:
        return "GL_SMOOTH";
    // case 0x0B23: return "GL_SMOOTH_LINE_WIDTH_GRANULARITY";
    // case 0x0B22: return "GL_SMOOTH_LINE_WIDTH_RANGE";
    // case 0x0B13: return "GL_SMOOTH_POINT_SIZE_GRANULARITY";
    // case 0x0B12: return "GL_SMOOTH_POINT_SIZE_RANGE";
    case 0x8588:
        return "GL_SOURCE0_ALPHA";
    case 0x8580:
        return "GL_SOURCE0_RGB";
    case 0x8589:
        return "GL_SOURCE1_ALPHA";
    case 0x8581:
        return "GL_SOURCE1_RGB";
    case 0x858A:
        return "GL_SOURCE2_ALPHA";
    case 0x8582:
        return "GL_SOURCE2_RGB";
    case 0x1202:
        return "GL_SPECULAR";
    case 0x2402:
        return "GL_SPHERE_MAP";
    case 0x9552:
        return "GL_SPIR_V_BINARY";
    case 0x9553:
        return "GL_SPIR_V_EXTENSIONS";
    case 0x1206:
        return "GL_SPOT_CUTOFF";
    case 0x1204:
        return "GL_SPOT_DIRECTION";
    case 0x1205:
        return "GL_SPOT_EXPONENT";
    // case 0x8588: return "GL_SRC0_ALPHA";
    // case 0x8580: return "GL_SRC0_RGB";
    // case 0x8589: return "GL_SRC1_ALPHA";
    case 0x88F9:
        return "GL_SRC1_COLOR";
    // case 0x8581: return "GL_SRC1_RGB";
    // case 0x858A: return "GL_SRC2_ALPHA";
    // case 0x8582: return "GL_SRC2_RGB";
    case 0x0302:
        return "GL_SRC_ALPHA";
    case 0x0308:
        return "GL_SRC_ALPHA_SATURATE";
    case 0x0300:
        return "GL_SRC_COLOR";
    case 0x8C40:
        return "GL_SRGB";
    case 0x8C41:
        return "GL_SRGB8";
    case 0x8C43:
        return "GL_SRGB8_ALPHA8";
    case 0x8C42:
        return "GL_SRGB_ALPHA";
    case 0x8297:
        return "GL_SRGB_READ";
    case 0x8298:
        return "GL_SRGB_WRITE";
    case 0x0503:
        return "GL_STACK_OVERFLOW";
    case 0x0504:
        return "GL_STACK_UNDERFLOW";
    case 0x88E6:
        return "GL_STATIC_COPY";
    case 0x88E4:
        return "GL_STATIC_DRAW";
    case 0x88E5:
        return "GL_STATIC_READ";
    case 0x1802:
        return "GL_STENCIL";
    case 0x8D20:
        return "GL_STENCIL_ATTACHMENT";
    case 0x8801:
        return "GL_STENCIL_BACK_FAIL";
    case 0x8800:
        return "GL_STENCIL_BACK_FUNC";
    case 0x8802:
        return "GL_STENCIL_BACK_PASS_DEPTH_FAIL";
    case 0x8803:
        return "GL_STENCIL_BACK_PASS_DEPTH_PASS";
    case 0x8CA3:
        return "GL_STENCIL_BACK_REF";
    case 0x8CA4:
        return "GL_STENCIL_BACK_VALUE_MASK";
    case 0x8CA5:
        return "GL_STENCIL_BACK_WRITEMASK";
    case 0x0D57:
        return "GL_STENCIL_BITS";
    case 0x0B91:
        return "GL_STENCIL_CLEAR_VALUE";
    case 0x8285:
        return "GL_STENCIL_COMPONENTS";
    case 0x0B94:
        return "GL_STENCIL_FAIL";
    case 0x0B92:
        return "GL_STENCIL_FUNC";
    case 0x1901:
        return "GL_STENCIL_INDEX";
    case 0x8D46:
        return "GL_STENCIL_INDEX1";
    case 0x8D49:
        return "GL_STENCIL_INDEX16";
    case 0x8D47:
        return "GL_STENCIL_INDEX4";
    case 0x8D48:
        return "GL_STENCIL_INDEX8";
    case 0x0B95:
        return "GL_STENCIL_PASS_DEPTH_FAIL";
    case 0x0B96:
        return "GL_STENCIL_PASS_DEPTH_PASS";
    case 0x0B97:
        return "GL_STENCIL_REF";
    case 0x8288:
        return "GL_STENCIL_RENDERABLE";
    case 0x0B90:
        return "GL_STENCIL_TEST";
    case 0x0B93:
        return "GL_STENCIL_VALUE_MASK";
    case 0x0B98:
        return "GL_STENCIL_WRITEMASK";
    case 0x0C33:
        return "GL_STEREO";
    case 0x88E2:
        return "GL_STREAM_COPY";
    case 0x88E0:
        return "GL_STREAM_DRAW";
    case 0x88E1:
        return "GL_STREAM_READ";
    case 0x0D50:
        return "GL_SUBPIXEL_BITS";
    case 0x84E7:
        return "GL_SUBTRACT";
    case 0x9113:
        return "GL_SYNC_CONDITION";
    case 0x9116:
        return "GL_SYNC_FENCE";
    case 0x9115:
        return "GL_SYNC_FLAGS";
    case 0x9117:
        return "GL_SYNC_GPU_COMMANDS_COMPLETE";
    case 0x9114:
        return "GL_SYNC_STATUS";
    case 0x2001:
        return "GL_T";
    case 0x2A2A:
        return "GL_T2F_C3F_V3F";
    case 0x2A2C:
        return "GL_T2F_C4F_N3F_V3F";
    case 0x2A29:
        return "GL_T2F_C4UB_V3F";
    case 0x2A2B:
        return "GL_T2F_N3F_V3F";
    case 0x2A27:
        return "GL_T2F_V3F";
    case 0x2A2D:
        return "GL_T4F_C4F_N3F_V4F";
    case 0x2A28:
        return "GL_T4F_V4F";
    case 0x8E75:
        return "GL_TESS_CONTROL_OUTPUT_VERTICES";
    case 0x8E88:
        return "GL_TESS_CONTROL_SHADER";
    // case 0x00000008: return "GL_TESS_CONTROL_SHADER_BIT";
    case 0x82F1:
        return "GL_TESS_CONTROL_SHADER_PATCHES";
    case 0x92E9:
        return "GL_TESS_CONTROL_SUBROUTINE";
    case 0x92EF:
        return "GL_TESS_CONTROL_SUBROUTINE_UNIFORM";
    case 0x829C:
        return "GL_TESS_CONTROL_TEXTURE";
    case 0x8E87:
        return "GL_TESS_EVALUATION_SHADER";
    // case 0x00000010: return "GL_TESS_EVALUATION_SHADER_BIT";
    case 0x82F2:
        return "GL_TESS_EVALUATION_SHADER_INVOCATIONS";
    case 0x92EA:
        return "GL_TESS_EVALUATION_SUBROUTINE";
    case 0x92F0:
        return "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM";
    case 0x829D:
        return "GL_TESS_EVALUATION_TEXTURE";
    case 0x8E76:
        return "GL_TESS_GEN_MODE";
    case 0x8E79:
        return "GL_TESS_GEN_POINT_MODE";
    case 0x8E77:
        return "GL_TESS_GEN_SPACING";
    case 0x8E78:
        return "GL_TESS_GEN_VERTEX_ORDER";
    case 0x1702:
        return "GL_TEXTURE";
    case 0x84C0:
        return "GL_TEXTURE0";
    case 0x84C1:
        return "GL_TEXTURE1";
    case 0x84CA:
        return "GL_TEXTURE10";
    case 0x84CB:
        return "GL_TEXTURE11";
    case 0x84CC:
        return "GL_TEXTURE12";
    case 0x84CD:
        return "GL_TEXTURE13";
    case 0x84CE:
        return "GL_TEXTURE14";
    case 0x84CF:
        return "GL_TEXTURE15";
    case 0x84D0:
        return "GL_TEXTURE16";
    case 0x84D1:
        return "GL_TEXTURE17";
    case 0x84D2:
        return "GL_TEXTURE18";
    case 0x84D3:
        return "GL_TEXTURE19";
    case 0x84C2:
        return "GL_TEXTURE2";
    case 0x84D4:
        return "GL_TEXTURE20";
    case 0x84D5:
        return "GL_TEXTURE21";
    case 0x84D6:
        return "GL_TEXTURE22";
    case 0x84D7:
        return "GL_TEXTURE23";
    case 0x84D8:
        return "GL_TEXTURE24";
    case 0x84D9:
        return "GL_TEXTURE25";
    case 0x84DA:
        return "GL_TEXTURE26";
    case 0x84DB:
        return "GL_TEXTURE27";
    case 0x84DC:
        return "GL_TEXTURE28";
    case 0x84DD:
        return "GL_TEXTURE29";
    case 0x84C3:
        return "GL_TEXTURE3";
    case 0x84DE:
        return "GL_TEXTURE30";
    case 0x84DF:
        return "GL_TEXTURE31";
    case 0x84C4:
        return "GL_TEXTURE4";
    case 0x84C5:
        return "GL_TEXTURE5";
    case 0x84C6:
        return "GL_TEXTURE6";
    case 0x84C7:
        return "GL_TEXTURE7";
    case 0x84C8:
        return "GL_TEXTURE8";
    case 0x84C9:
        return "GL_TEXTURE9";
    case 0x0DE0:
        return "GL_TEXTURE_1D";
    case 0x8C18:
        return "GL_TEXTURE_1D_ARRAY";
    case 0x0DE1:
        return "GL_TEXTURE_2D";
    case 0x8C1A:
        return "GL_TEXTURE_2D_ARRAY";
    case 0x9100:
        return "GL_TEXTURE_2D_MULTISAMPLE";
    case 0x9102:
        return "GL_TEXTURE_2D_MULTISAMPLE_ARRAY";
    case 0x806F:
        return "GL_TEXTURE_3D";
    case 0x805F:
        return "GL_TEXTURE_ALPHA_SIZE";
    case 0x8C13:
        return "GL_TEXTURE_ALPHA_TYPE";
    case 0x813C:
        return "GL_TEXTURE_BASE_LEVEL";
    case 0x8068:
        return "GL_TEXTURE_BINDING_1D";
    case 0x8C1C:
        return "GL_TEXTURE_BINDING_1D_ARRAY";
    case 0x8069:
        return "GL_TEXTURE_BINDING_2D";
    case 0x8C1D:
        return "GL_TEXTURE_BINDING_2D_ARRAY";
    case 0x9104:
        return "GL_TEXTURE_BINDING_2D_MULTISAMPLE";
    case 0x9105:
        return "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY";
    case 0x806A:
        return "GL_TEXTURE_BINDING_3D";
    case 0x8C2C:
        return "GL_TEXTURE_BINDING_BUFFER";
    case 0x8514:
        return "GL_TEXTURE_BINDING_CUBE_MAP";
    case 0x900A:
        return "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY";
    case 0x84F6:
        return "GL_TEXTURE_BINDING_RECTANGLE";
    case 0x00040000:
        return "GL_TEXTURE_BIT";
    case 0x805E:
        return "GL_TEXTURE_BLUE_SIZE";
    case 0x8C12:
        return "GL_TEXTURE_BLUE_TYPE";
    case 0x1005:
        return "GL_TEXTURE_BORDER";
    case 0x1004:
        return "GL_TEXTURE_BORDER_COLOR";
    case 0x8C2A:
        return "GL_TEXTURE_BUFFER";
    // case 0x8C2A: return "GL_TEXTURE_BUFFER_BINDING";
    case 0x8C2D:
        return "GL_TEXTURE_BUFFER_DATA_STORE_BINDING";
    case 0x919D:
        return "GL_TEXTURE_BUFFER_OFFSET";
    case 0x919F:
        return "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT";
    case 0x919E:
        return "GL_TEXTURE_BUFFER_SIZE";
    case 0x884D:
        return "GL_TEXTURE_COMPARE_FUNC";
    case 0x884C:
        return "GL_TEXTURE_COMPARE_MODE";
    case 0x1003:
        return "GL_TEXTURE_COMPONENTS";
    case 0x86A1:
        return "GL_TEXTURE_COMPRESSED";
    case 0x82B2:
        return "GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT";
    case 0x82B3:
        return "GL_TEXTURE_COMPRESSED_BLOCK_SIZE";
    case 0x82B1:
        return "GL_TEXTURE_COMPRESSED_BLOCK_WIDTH";
    case 0x86A0:
        return "GL_TEXTURE_COMPRESSED_IMAGE_SIZE";
    case 0x84EF:
        return "GL_TEXTURE_COMPRESSION_HINT";
    case 0x8078:
        return "GL_TEXTURE_COORD_ARRAY";
    case 0x889A:
        return "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING";
    case 0x8092:
        return "GL_TEXTURE_COORD_ARRAY_POINTER";
    case 0x8088:
        return "GL_TEXTURE_COORD_ARRAY_SIZE";
    case 0x808A:
        return "GL_TEXTURE_COORD_ARRAY_STRIDE";
    case 0x8089:
        return "GL_TEXTURE_COORD_ARRAY_TYPE";
    case 0x8513:
        return "GL_TEXTURE_CUBE_MAP";
    case 0x9009:
        return "GL_TEXTURE_CUBE_MAP_ARRAY";
    case 0x8516:
        return "GL_TEXTURE_CUBE_MAP_NEGATIVE_X";
    case 0x8518:
        return "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y";
    case 0x851A:
        return "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z";
    case 0x8515:
        return "GL_TEXTURE_CUBE_MAP_POSITIVE_X";
    case 0x8517:
        return "GL_TEXTURE_CUBE_MAP_POSITIVE_Y";
    case 0x8519:
        return "GL_TEXTURE_CUBE_MAP_POSITIVE_Z";
    case 0x884F:
        return "GL_TEXTURE_CUBE_MAP_SEAMLESS";
    case 0x8071:
        return "GL_TEXTURE_DEPTH";
    case 0x884A:
        return "GL_TEXTURE_DEPTH_SIZE";
    case 0x8C16:
        return "GL_TEXTURE_DEPTH_TYPE";
    case 0x2300:
        return "GL_TEXTURE_ENV";
    case 0x2201:
        return "GL_TEXTURE_ENV_COLOR";
    case 0x2200:
        return "GL_TEXTURE_ENV_MODE";
    // case 0x00000008: return "GL_TEXTURE_FETCH_BARRIER_BIT";
    case 0x8500:
        return "GL_TEXTURE_FILTER_CONTROL";
    case 0x9107:
        return "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS";
    case 0x82A2:
        return "GL_TEXTURE_GATHER";
    case 0x82A3:
        return "GL_TEXTURE_GATHER_SHADOW";
    case 0x2500:
        return "GL_TEXTURE_GEN_MODE";
    case 0x0C63:
        return "GL_TEXTURE_GEN_Q";
    case 0x0C62:
        return "GL_TEXTURE_GEN_R";
    case 0x0C60:
        return "GL_TEXTURE_GEN_S";
    case 0x0C61:
        return "GL_TEXTURE_GEN_T";
    case 0x805D:
        return "GL_TEXTURE_GREEN_SIZE";
    case 0x8C11:
        return "GL_TEXTURE_GREEN_TYPE";
    case 0x1001:
        return "GL_TEXTURE_HEIGHT";
    case 0x828F:
        return "GL_TEXTURE_IMAGE_FORMAT";
    case 0x8290:
        return "GL_TEXTURE_IMAGE_TYPE";
    case 0x912F:
        return "GL_TEXTURE_IMMUTABLE_FORMAT";
    case 0x82DF:
        return "GL_TEXTURE_IMMUTABLE_LEVELS";
    case 0x8061:
        return "GL_TEXTURE_INTENSITY_SIZE";
    case 0x8C15:
        return "GL_TEXTURE_INTENSITY_TYPE";
    // case 0x1003: return "GL_TEXTURE_INTERNAL_FORMAT";
    case 0x8501:
        return "GL_TEXTURE_LOD_BIAS";
    case 0x8060:
        return "GL_TEXTURE_LUMINANCE_SIZE";
    case 0x8C14:
        return "GL_TEXTURE_LUMINANCE_TYPE";
    case 0x2800:
        return "GL_TEXTURE_MAG_FILTER";
    case 0x0BA8:
        return "GL_TEXTURE_MATRIX";
    case 0x84FE:
        return "GL_TEXTURE_MAX_ANISOTROPY";
    case 0x813D:
        return "GL_TEXTURE_MAX_LEVEL";
    case 0x813B:
        return "GL_TEXTURE_MAX_LOD";
    case 0x2801:
        return "GL_TEXTURE_MIN_FILTER";
    case 0x813A:
        return "GL_TEXTURE_MIN_LOD";
    case 0x8066:
        return "GL_TEXTURE_PRIORITY";
    case 0x84F5:
        return "GL_TEXTURE_RECTANGLE";
    case 0x805C:
        return "GL_TEXTURE_RED_SIZE";
    case 0x8C10:
        return "GL_TEXTURE_RED_TYPE";
    case 0x8067:
        return "GL_TEXTURE_RESIDENT";
    case 0x9106:
        return "GL_TEXTURE_SAMPLES";
    case 0x82A1:
        return "GL_TEXTURE_SHADOW";
    case 0x8C3F:
        return "GL_TEXTURE_SHARED_SIZE";
    case 0x0BA5:
        return "GL_TEXTURE_STACK_DEPTH";
    case 0x88F1:
        return "GL_TEXTURE_STENCIL_SIZE";
    case 0x8E45:
        return "GL_TEXTURE_SWIZZLE_A";
    case 0x8E44:
        return "GL_TEXTURE_SWIZZLE_B";
    case 0x8E43:
        return "GL_TEXTURE_SWIZZLE_G";
    case 0x8E42:
        return "GL_TEXTURE_SWIZZLE_R";
    case 0x8E46:
        return "GL_TEXTURE_SWIZZLE_RGBA";
    case 0x1006:
        return "GL_TEXTURE_TARGET";
    // case 0x00000100: return "GL_TEXTURE_UPDATE_BARRIER_BIT";
    case 0x82B5:
        return "GL_TEXTURE_VIEW";
    case 0x82DD:
        return "GL_TEXTURE_VIEW_MIN_LAYER";
    case 0x82DB:
        return "GL_TEXTURE_VIEW_MIN_LEVEL";
    case 0x82DE:
        return "GL_TEXTURE_VIEW_NUM_LAYERS";
    case 0x82DC:
        return "GL_TEXTURE_VIEW_NUM_LEVELS";
    // case 0x1000: return "GL_TEXTURE_WIDTH";
    case 0x8072:
        return "GL_TEXTURE_WRAP_R";
    case 0x2802:
        return "GL_TEXTURE_WRAP_S";
    case 0x2803:
        return "GL_TEXTURE_WRAP_T";
    case 0x911B:
        return "GL_TIMEOUT_EXPIRED";
    // case 0xFFFFFFFFFFFFFFFF: return "GL_TIMEOUT_IGNORED";
    case 0x8E28:
        return "GL_TIMESTAMP";
    case 0x88BF:
        return "GL_TIME_ELAPSED";
    case 0x930C:
        return "GL_TOP_LEVEL_ARRAY_SIZE";
    case 0x930D:
        return "GL_TOP_LEVEL_ARRAY_STRIDE";
    // case 0x00001000: return "GL_TRANSFORM_BIT";
    case 0x8E22:
        return "GL_TRANSFORM_FEEDBACK";
    case 0x8E24:
        return "GL_TRANSFORM_FEEDBACK_ACTIVE";
    // case 0x00000800: return "GL_TRANSFORM_FEEDBACK_BARRIER_BIT";
    case 0x8E25:
        return "GL_TRANSFORM_FEEDBACK_BINDING";
    case 0x8C8E:
        return "GL_TRANSFORM_FEEDBACK_BUFFER";
    // case 0x8E24: return "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE";
    case 0x8C8F:
        return "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING";
    case 0x934B:
        return "GL_TRANSFORM_FEEDBACK_BUFFER_INDEX";
    case 0x8C7F:
        return "GL_TRANSFORM_FEEDBACK_BUFFER_MODE";
    case 0x8E23:
        return "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED";
    case 0x8C85:
        return "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE";
    case 0x8C84:
        return "GL_TRANSFORM_FEEDBACK_BUFFER_START";
    case 0x934C:
        return "GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE";
    case 0x82EC:
        return "GL_TRANSFORM_FEEDBACK_OVERFLOW";
    // case 0x8E23: return "GL_TRANSFORM_FEEDBACK_PAUSED";
    case 0x8C88:
        return "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN";
    case 0x82ED:
        return "GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW";
    case 0x92F4:
        return "GL_TRANSFORM_FEEDBACK_VARYING";
    case 0x8C83:
        return "GL_TRANSFORM_FEEDBACK_VARYINGS";
    case 0x8C76:
        return "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH";
    case 0x84E6:
        return "GL_TRANSPOSE_COLOR_MATRIX";
    case 0x84E3:
        return "GL_TRANSPOSE_MODELVIEW_MATRIX";
    case 0x84E4:
        return "GL_TRANSPOSE_PROJECTION_MATRIX";
    case 0x84E5:
        return "GL_TRANSPOSE_TEXTURE_MATRIX";
    // case 0x0004: return "GL_TRIANGLES";
    case 0x000C:
        return "GL_TRIANGLES_ADJACENCY";
    case 0x0006:
        return "GL_TRIANGLE_FAN";
    case 0x0005:
        return "GL_TRIANGLE_STRIP";
    case 0x000D:
        return "GL_TRIANGLE_STRIP_ADJACENCY";
    // case 1: return "GL_TRUE";
    case 0x92FA:
        return "GL_TYPE";
    case 0x8260:
        return "GL_UNDEFINED_VERTEX";
    case 0x92E1:
        return "GL_UNIFORM";
    case 0x8A3C:
        return "GL_UNIFORM_ARRAY_STRIDE";
    case 0x92DA:
        return "GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX";
    case 0x92E2:
        return "GL_UNIFORM_BLOCK";
    case 0x8A42:
        return "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS";
    case 0x8A43:
        return "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES";
    case 0x8A3F:
        return "GL_UNIFORM_BLOCK_BINDING";
    case 0x8A40:
        return "GL_UNIFORM_BLOCK_DATA_SIZE";
    case 0x8A3A:
        return "GL_UNIFORM_BLOCK_INDEX";
    case 0x8A41:
        return "GL_UNIFORM_BLOCK_NAME_LENGTH";
    case 0x90EC:
        return "GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER";
    case 0x8A46:
        return "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER";
    case 0x8A45:
        return "GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER";
    case 0x84F0:
        return "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER";
    case 0x84F1:
        return "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER";
    case 0x8A44:
        return "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER";
    case 0x8A11:
        return "GL_UNIFORM_BUFFER";
    case 0x8A28:
        return "GL_UNIFORM_BUFFER_BINDING";
    case 0x8A34:
        return "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT";
    case 0x8A2A:
        return "GL_UNIFORM_BUFFER_SIZE";
    case 0x8A29:
        return "GL_UNIFORM_BUFFER_START";
    case 0x8A3E:
        return "GL_UNIFORM_IS_ROW_MAJOR";
    case 0x8A3D:
        return "GL_UNIFORM_MATRIX_STRIDE";
    case 0x8A39:
        return "GL_UNIFORM_NAME_LENGTH";
    case 0x8A3B:
        return "GL_UNIFORM_OFFSET";
    case 0x8A38:
        return "GL_UNIFORM_SIZE";
    case 0x8A37:
        return "GL_UNIFORM_TYPE";
    case 0x8255:
        return "GL_UNKNOWN_CONTEXT_RESET";
    case 0x0CF5:
        return "GL_UNPACK_ALIGNMENT";
    case 0x9129:
        return "GL_UNPACK_COMPRESSED_BLOCK_DEPTH";
    case 0x9128:
        return "GL_UNPACK_COMPRESSED_BLOCK_HEIGHT";
    case 0x912A:
        return "GL_UNPACK_COMPRESSED_BLOCK_SIZE";
    case 0x9127:
        return "GL_UNPACK_COMPRESSED_BLOCK_WIDTH";
    case 0x806E:
        return "GL_UNPACK_IMAGE_HEIGHT";
    case 0x0CF1:
        return "GL_UNPACK_LSB_FIRST";
    case 0x0CF2:
        return "GL_UNPACK_ROW_LENGTH";
    case 0x806D:
        return "GL_UNPACK_SKIP_IMAGES";
    case 0x0CF4:
        return "GL_UNPACK_SKIP_PIXELS";
    case 0x0CF3:
        return "GL_UNPACK_SKIP_ROWS";
    case 0x0CF0:
        return "GL_UNPACK_SWAP_BYTES";
    case 0x9118:
        return "GL_UNSIGNALED";
    case 0x1401:
        return "GL_UNSIGNED_BYTE";
    case 0x8362:
        return "GL_UNSIGNED_BYTE_2_3_3_REV";
    case 0x8032:
        return "GL_UNSIGNED_BYTE_3_3_2";
    case 0x1405:
        return "GL_UNSIGNED_INT";
    case 0x8C3B:
        return "GL_UNSIGNED_INT_10F_11F_11F_REV";
    case 0x8036:
        return "GL_UNSIGNED_INT_10_10_10_2";
    case 0x84FA:
        return "GL_UNSIGNED_INT_24_8";
    case 0x8368:
        return "GL_UNSIGNED_INT_2_10_10_10_REV";
    case 0x8C3E:
        return "GL_UNSIGNED_INT_5_9_9_9_REV";
    case 0x8035:
        return "GL_UNSIGNED_INT_8_8_8_8";
    case 0x8367:
        return "GL_UNSIGNED_INT_8_8_8_8_REV";
    case 0x92DB:
        return "GL_UNSIGNED_INT_ATOMIC_COUNTER";
    case 0x9062:
        return "GL_UNSIGNED_INT_IMAGE_1D";
    case 0x9068:
        return "GL_UNSIGNED_INT_IMAGE_1D_ARRAY";
    case 0x9063:
        return "GL_UNSIGNED_INT_IMAGE_2D";
    case 0x9069:
        return "GL_UNSIGNED_INT_IMAGE_2D_ARRAY";
    case 0x906B:
        return "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE";
    case 0x906C:
        return "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY";
    case 0x9065:
        return "GL_UNSIGNED_INT_IMAGE_2D_RECT";
    case 0x9064:
        return "GL_UNSIGNED_INT_IMAGE_3D";
    case 0x9067:
        return "GL_UNSIGNED_INT_IMAGE_BUFFER";
    case 0x9066:
        return "GL_UNSIGNED_INT_IMAGE_CUBE";
    case 0x906A:
        return "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY";
    case 0x8DD1:
        return "GL_UNSIGNED_INT_SAMPLER_1D";
    case 0x8DD6:
        return "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY";
    case 0x8DD2:
        return "GL_UNSIGNED_INT_SAMPLER_2D";
    case 0x8DD7:
        return "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY";
    case 0x910A:
        return "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE";
    case 0x910D:
        return "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY";
    case 0x8DD5:
        return "GL_UNSIGNED_INT_SAMPLER_2D_RECT";
    case 0x8DD3:
        return "GL_UNSIGNED_INT_SAMPLER_3D";
    case 0x8DD8:
        return "GL_UNSIGNED_INT_SAMPLER_BUFFER";
    case 0x8DD4:
        return "GL_UNSIGNED_INT_SAMPLER_CUBE";
    case 0x900F:
        return "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY";
    case 0x8DC6:
        return "GL_UNSIGNED_INT_VEC2";
    case 0x8DC7:
        return "GL_UNSIGNED_INT_VEC3";
    case 0x8DC8:
        return "GL_UNSIGNED_INT_VEC4";
    case 0x8C17:
        return "GL_UNSIGNED_NORMALIZED";
    case 0x1403:
        return "GL_UNSIGNED_SHORT";
    case 0x8366:
        return "GL_UNSIGNED_SHORT_1_5_5_5_REV";
    case 0x8033:
        return "GL_UNSIGNED_SHORT_4_4_4_4";
    case 0x8365:
        return "GL_UNSIGNED_SHORT_4_4_4_4_REV";
    case 0x8034:
        return "GL_UNSIGNED_SHORT_5_5_5_1";
    case 0x8363:
        return "GL_UNSIGNED_SHORT_5_6_5";
    case 0x8364:
        return "GL_UNSIGNED_SHORT_5_6_5_REV";
    case 0x8CA2:
        return "GL_UPPER_LEFT";
    case 0x2A20:
        return "GL_V2F";
    case 0x2A21:
        return "GL_V3F";
    case 0x8B83:
        return "GL_VALIDATE_STATUS";
    case 0x1F00:
        return "GL_VENDOR";
    case 0x1F02:
        return "GL_VERSION";
    case 0x8074:
        return "GL_VERTEX_ARRAY";
    case 0x85B5:
        return "GL_VERTEX_ARRAY_BINDING";
    case 0x8896:
        return "GL_VERTEX_ARRAY_BUFFER_BINDING";
    case 0x808E:
        return "GL_VERTEX_ARRAY_POINTER";
    case 0x807A:
        return "GL_VERTEX_ARRAY_SIZE";
    case 0x807C:
        return "GL_VERTEX_ARRAY_STRIDE";
    case 0x807B:
        return "GL_VERTEX_ARRAY_TYPE";
    case 0x889F:
        return "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING";
    case 0x88FE:
        return "GL_VERTEX_ATTRIB_ARRAY_DIVISOR";
    case 0x8622:
        return "GL_VERTEX_ATTRIB_ARRAY_ENABLED";
    case 0x88FD:
        return "GL_VERTEX_ATTRIB_ARRAY_INTEGER";
    case 0x874E:
        return "GL_VERTEX_ATTRIB_ARRAY_LONG";
    case 0x886A:
        return "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED";
    case 0x8645:
        return "GL_VERTEX_ATTRIB_ARRAY_POINTER";
    case 0x8623:
        return "GL_VERTEX_ATTRIB_ARRAY_SIZE";
    case 0x8624:
        return "GL_VERTEX_ATTRIB_ARRAY_STRIDE";
    case 0x8625:
        return "GL_VERTEX_ATTRIB_ARRAY_TYPE";
    case 0x82D4:
        return "GL_VERTEX_ATTRIB_BINDING";
    case 0x82D5:
        return "GL_VERTEX_ATTRIB_RELATIVE_OFFSET";
    case 0x8F4F:
        return "GL_VERTEX_BINDING_BUFFER";
    case 0x82D6:
        return "GL_VERTEX_BINDING_DIVISOR";
    case 0x82D7:
        return "GL_VERTEX_BINDING_OFFSET";
    case 0x82D8:
        return "GL_VERTEX_BINDING_STRIDE";
    // case 0x8642: return "GL_VERTEX_PROGRAM_POINT_SIZE";
    case 0x8643:
        return "GL_VERTEX_PROGRAM_TWO_SIDE";
    case 0x8B31:
        return "GL_VERTEX_SHADER";
    case 0x82F0:
        return "GL_VERTEX_SHADER_INVOCATIONS";
    case 0x92E8:
        return "GL_VERTEX_SUBROUTINE";
    case 0x92EE:
        return "GL_VERTEX_SUBROUTINE_UNIFORM";
    case 0x829B:
        return "GL_VERTEX_TEXTURE";
    case 0x82EE:
        return "GL_VERTICES_SUBMITTED";
    case 0x0BA2:
        return "GL_VIEWPORT";
    // case 0x00000800: return "GL_VIEWPORT_BIT";
    case 0x825D:
        return "GL_VIEWPORT_BOUNDS_RANGE";
    case 0x825F:
        return "GL_VIEWPORT_INDEX_PROVOKING_VERTEX";
    case 0x825C:
        return "GL_VIEWPORT_SUBPIXEL_BITS";
    case 0x82C4:
        return "GL_VIEW_CLASS_128_BITS";
    case 0x82CA:
        return "GL_VIEW_CLASS_16_BITS";
    case 0x82C9:
        return "GL_VIEW_CLASS_24_BITS";
    case 0x82C8:
        return "GL_VIEW_CLASS_32_BITS";
    case 0x82C7:
        return "GL_VIEW_CLASS_48_BITS";
    case 0x82C6:
        return "GL_VIEW_CLASS_64_BITS";
    case 0x82CB:
        return "GL_VIEW_CLASS_8_BITS";
    case 0x82C5:
        return "GL_VIEW_CLASS_96_BITS";
    case 0x82D3:
        return "GL_VIEW_CLASS_BPTC_FLOAT";
    case 0x82D2:
        return "GL_VIEW_CLASS_BPTC_UNORM";
    case 0x82D0:
        return "GL_VIEW_CLASS_RGTC1_RED";
    case 0x82D1:
        return "GL_VIEW_CLASS_RGTC2_RG";
    case 0x82CC:
        return "GL_VIEW_CLASS_S3TC_DXT1_RGB";
    case 0x82CD:
        return "GL_VIEW_CLASS_S3TC_DXT1_RGBA";
    case 0x82CE:
        return "GL_VIEW_CLASS_S3TC_DXT3_RGBA";
    case 0x82CF:
        return "GL_VIEW_CLASS_S3TC_DXT5_RGBA";
    case 0x82B6:
        return "GL_VIEW_COMPATIBILITY_CLASS";
    case 0x911D:
        return "GL_WAIT_FAILED";
    case 0x889E:
        return "GL_WEIGHT_ARRAY_BUFFER_BINDING";
    case 0x88B9:
        return "GL_WRITE_ONLY";
    case 0x1506:
        return "GL_XOR";
    // case 0: return "GL_ZERO";
    case 0x935F:
        return "GL_ZERO_TO_ONE";
    case 0x0D16:
        return "GL_ZOOM_X";
    case 0x0D17:
        return "GL_ZOOM_Y";
    default:
        return UNKNOWN;
    }
}

} // namespace gnev::fmt